(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3758],{25380:function(e){function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=function(){return[]},t.resolve=t,t.id=25380,e.exports=t},51909:function(e,t,n){"use strict";var o=n(83117),r=n(67294),s=n(52263),i=n(73945),a=n(28182),d=n(12175),l=n(65488),c=n(85162),u=n(90814);t.Z=e=>{let{children:t,fileName:n,...p}=e;const m=t,{code:k}=(0,d.transform)(m,{plugins:["transform-typescript"],retainLines:!0}),{siteConfig:{customFields:{prettierConfig:g}}}=(0,s.Z)(),f=(0,i.format)(k,{parser:a.parsers.babel.parse,...g}),v=n?`${n}.ts`:void 0,w=n?`${n}.js`:void 0;return r.createElement(l.Z,{groupId:"ts-js-choice"},r.createElement(c.Z,{value:"ts",label:"Typescript",default:!0},r.createElement(u.Z,(0,o.Z)({},p,{className:"language-ts",title:v}),m)),r.createElement(c.Z,{value:"js",label:"Javascript"},r.createElement(u.Z,(0,o.Z)({},p,{className:"language-js",title:w}),f)))}},23575:function(e,t,n){"use strict";n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return d},default:function(){return m},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return u}});var o=n(83117),r=(n(67294),n(3905)),s=n(51909),i=n(5871);const a={id:"howto-integrate-nodejs",title:"NodeJS"},d=void 0,l={unversionedId:"develop/sdk/integrate/howto-integrate-nodejs",id:"develop/sdk/integrate/howto-integrate-nodejs",title:"NodeJS",description:"NodeJS is natively supported and doesn't require any additional setup.",source:"@site/docs/develop/01_sdk/04_integrate/01_nodejs.md",sourceDirName:"develop/01_sdk/04_integrate",slug:"/develop/sdk/integrate/howto-integrate-nodejs",permalink:"/docs/develop/sdk/integrate/howto-integrate-nodejs",draft:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/01_sdk/04_integrate/01_nodejs.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"howto-integrate-nodejs",title:"NodeJS"},sidebar:"sdk",previous:{title:"How to Integrate",permalink:"/docs/develop/sdk/integrate/"},next:{title:"Browser",permalink:"/docs/develop/sdk/integrate/howto-integrate-browser"}},c={},u=[],p={toc:u};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"NodeJS is natively supported and doesn't require any additional setup."),(0,r.kt)("p",null,"Have a look at these example ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"index.js")," files for reference:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "kilt-sdk-node-test",\n  "type": "module",\n  "version": "1.0.0",\n  "main": "index.js",\n  "license": "MIT",\n  "dependencies": {\n    "@kiltprotocol/sdk-js": "0.29.0"\n  }\n}\n')),(0,r.kt)(s.Z,{mdxType:"TsJsBlock"},i.Z))}m.isMDXComponent=!0},5871:function(e,t){"use strict";t.Z="import type { KeyringPair } from '@polkadot/keyring/types'\n\nimport * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function queryAccountWeb3Name(\n  lookupAccountAddress: KeyringPair['address']\n): Promise<Kilt.Did.Web3Name | null> {\n  const api = Kilt.ConfigService.get('api')\n\n  const encodedLinkedDetails = await api.call.did.queryByAccount(\n    Kilt.Did.accountToChain(lookupAccountAddress)\n  )\n  const { web3Name } = Kilt.Did.linkedInfoFromChain(encodedLinkedDetails)\n  if (web3Name) {\n    console.log(\n      `web3name for account \"${lookupAccountAddress}\" -> \"${web3Name}\"`\n    )\n  } else {\n    console.log(\n      `Account \"${lookupAccountAddress}\" does not have a linked web3name.`\n    )\n  }\n\n  return web3Name\n}\n"}}]);