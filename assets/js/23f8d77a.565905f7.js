(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1815],{5764:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=5764,e.exports=t},3327:(e,t,o)=>{"use strict";o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>m,frontMatter:()=>c,metadata:()=>l,toc:()=>p});var i=o(4848),n=o(8453),r=o(3172);const s="import * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function exportDid(\n  did: Kilt.DidDocument,\n  exportType: 'application/json' | 'application/ld+json'\n) {\n  const conformingDidDocument = Kilt.Did.exportToDidDocument(did, exportType)\n\n  // Will print the DID URI.\n  console.log(conformingDidDocument.id)\n\n  // Will print all the public keys associated with the DID.\n  console.log(conformingDidDocument.verificationMethod)\n\n  // Will print all the assertion keys IDs.\n  console.log(conformingDidDocument.assertionMethod)\n\n  // Will print all the encryption keys IDs.\n  console.log(conformingDidDocument.keyAgreement)\n\n  // Will print all the delegation keys IDs.\n  console.log(conformingDidDocument.capabilityDelegation)\n\n  // Will print all the external services referenced inside the `DidDocument` instance.\n  console.log(conformingDidDocument.service)\n\n  return conformingDidDocument\n}\n",c={id:"did-export",title:"Exporting a KILT DID"},d=void 0,l={id:"develop/sdk/cookbook/dids/did-export",title:"Exporting a KILT DID",description:"The DID Document exporter provides the functionality needed to convert an instance of an SDK DidDocument object into a document that is compliant with the W3C specification.",source:"@site/docs/develop/01_sdk/02_cookbook/01_dids/08_did_export.md",sourceDirName:"develop/01_sdk/02_cookbook/01_dids",slug:"/develop/sdk/cookbook/dids/did-export",permalink:"/docs/develop/sdk/cookbook/dids/did-export",draft:!1,unlisted:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/01_sdk/02_cookbook/01_dids/08_did_export.md",tags:[],version:"current",lastUpdatedAt:172198217e4,sidebarPosition:8,frontMatter:{id:"did-export",title:"Exporting a KILT DID"},sidebar:"sdk",previous:{title:"Generate and Verify a DID Signature",permalink:"/docs/develop/sdk/cookbook/dids/did-signature"},next:{title:"Claim a web3name",permalink:"/docs/develop/sdk/cookbook/web3names/web3name-claim"}},a={},p=[{value:"How to use the exporter",id:"how-to-use-the-exporter",level:2}];function h(e){const t={a:"a",code:"code",h2:"h2",p:"p",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["The DID Document exporter provides the functionality needed to convert an instance of an SDK ",(0,i.jsx)(t.code,{children:"DidDocument"})," object into a document that is compliant with the ",(0,i.jsx)(t.a,{href:"https://www.w3.org/TR/did-core/",children:"W3C specification"}),".\nThis component is required for the KILT plugin for the ",(0,i.jsx)(t.a,{href:"https://dev.uniresolver.io/",children:"DIF Universal Resolver"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"how-to-use-the-exporter",children:"How to use the exporter"}),"\n",(0,i.jsxs)(t.p,{children:["The exporter interface and used types are part of the ",(0,i.jsx)(t.code,{children:"@kiltprotocol/types"})," package, while the actual ",(0,i.jsx)(t.code,{children:"DidDocumentExporter"})," is part of the ",(0,i.jsx)(t.code,{children:"@kiltprotocol/did"})," package.\nBoth types and DID packages are accessible via the top-level ",(0,i.jsx)(t.code,{children:"@kiltprotocol/sdk-js"})," import.\nThe following shows how to use the exporter to generate a W3C-compliant DID Document from a given ",(0,i.jsx)(t.code,{children:"DidDocument"}),", which can represent either a light or a full DID."]}),"\n",(0,i.jsx)(r.A,{children:s})]})}function m(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},3172:(e,t,o)=>{"use strict";o.d(t,{A:()=>m});var i=o(6540),n=o(4586),r=o(6352),s=o(8463),c=o(5283),d=o(6745),l=o(1470),a=o(9365),p=o(1432),h=o(4848);const m=e=>{let{children:t,fileName:o,...m}=e;const u=t,[D,f]=(0,i.useState)("# loading code..."),{siteConfig:{customFields:{prettierConfig:g}}}=(0,n.A)(),k=(0,i.useMemo)((()=>{const{code:e}=(0,r.transform)(u,{plugins:["transform-typescript"],retainLines:!0}),t=["./generateAccount","./generateKeypairs","./ctypeSchema","./createClaim","./generateLightDid","../attester/ctypeSchema","../claimer/generateLightDid","../claimer/generateCredential","./claimer/createPresentation","./claimer/generateKeypairs","./claimer/generateLightDid"];let o=e.replace(/from\s+['"](.+)['"]/g,((e,o)=>t.includes(o)?`from '${o}.js'`:e));return o=o.replace("if (require.main === module)","if (process.argv[1] === new URL(import.meta.url).pathname)"),o}),[u]);(0,i.useEffect)((()=>{s.GP(k,{parser:"babel",plugins:[c.A,d.Ay],...g}).then(f)}),[g,k]);const x=[{fileName:o?`${o}.ts`:void 0,fileContents:u,fileID:"ts",fileLabel:"Typescript"},{fileName:o?`${o}.js`:void 0,fileContents:D,fileID:"js",fileLabel:"Javascript"}];return(0,h.jsx)(h.Fragment,{children:(0,h.jsx)(l.A,{groupId:"ts-js-choice",children:x.map((e=>(0,h.jsx)(a.A,{value:e.fileID,label:e.fileLabel,default:!0,children:(0,h.jsx)(p.A,{...m,className:"language-"+e.fileID,title:e.fileName,children:e.fileContents})})))})})}}}]);