(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1255],{25380:function(e){function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=function(){return[]},t.resolve=t,t.id=25380,e.exports=t},51909:function(e,t,n){"use strict";var o=n(83117),i=n(67294),a=n(52263),s=n(73945),r=n(28182),c=n(12175),l=n(65488),d=n(85162),u=n(90814);t.Z=e=>{let{children:t,fileName:n,...m}=e;const p=t,{code:k}=(0,c.transform)(p,{plugins:["transform-typescript"],retainLines:!0}),{siteConfig:{customFields:{prettierConfig:f}}}=(0,a.Z)(),h=(0,s.format)(k,{parser:r.parsers.babel.parse,...f}),v=n?`${n}.ts`:void 0,b=n?`${n}.js`:void 0;return i.createElement(l.Z,{groupId:"ts-js-choice"},i.createElement(d.Z,{value:"ts",label:"Typescript",default:!0},i.createElement(u.Z,(0,o.Z)({},m,{className:"language-ts",title:v}),p)),i.createElement(d.Z,{value:"js",label:"Javascript"},i.createElement(u.Z,(0,o.Z)({},m,{className:"language-js",title:b}),h)))}},98862:function(e,t,n){"use strict";n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return r},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return d}});var o=n(83117),i=(n(67294),n(3905)),a=n(51909);const s={id:"attestation-request",title:"Request an Attestation"},r=void 0,c={unversionedId:"develop/sdk/cookbook/claiming/attestation-request",id:"develop/sdk/cookbook/claiming/attestation-request",title:"Request an Attestation",description:"To obtain credentials, Claimers have to request an attestation for a set of claims from an Attester.",source:"@site/docs/develop/01_sdk/02_cookbook/04_claiming/02_attestation_request.md",sourceDirName:"develop/01_sdk/02_cookbook/04_claiming",slug:"/develop/sdk/cookbook/claiming/attestation-request",permalink:"/docs/develop/sdk/cookbook/claiming/attestation-request",draft:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/01_sdk/02_cookbook/04_claiming/02_attestation_request.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"attestation-request",title:"Request an Attestation"},sidebar:"sdk",previous:{title:"Create a CType",permalink:"/docs/develop/sdk/cookbook/claiming/ctype-creation"},next:{title:"Attest a Claim (Issue a Credential)",permalink:"/docs/develop/sdk/cookbook/claiming/attestation-creation"}},l={},d=[],u={toc:d};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"To obtain credentials, Claimers have to request an attestation for a set of claims from an Attester.\nThe resulting object is a ",(0,i.kt)("inlineCode",{parentName:"p"},"Credential"),", which can be created following the snippet below."),(0,i.kt)("p",null,"This process does not involve any interaction with the KILT blockchain, but is simply a communication channel where the Claimer and the Attester can communicate."),(0,i.kt)(a.Z,{mdxType:"TsJsBlock"},"import * as Kilt from '@kiltprotocol/sdk-js'\n\nexport function requestAttestation(\n  claimer: Kilt.DidDocument,\n  ctype: Kilt.ICType\n): Kilt.ICredential {\n  // The claimer generates the claim they would like to get attested.\n  const claim = Kilt.Claim.fromCTypeAndClaimContents(\n    ctype,\n    {\n      name: 'Alice',\n      age: 29,\n      id: '123456789987654321'\n    },\n    claimer.uri\n  )\n\n  const credential = Kilt.Credential.fromClaim(claim)\n  return credential\n}\n"),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"The structure of the claims must respect the schema defined in the specified CType.\nAttesters (and Verifiers) will reject claims that fail to verify correctly.")))}m.isMDXComponent=!0}}]);