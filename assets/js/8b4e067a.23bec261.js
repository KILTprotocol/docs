(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[378],{5380:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=5380,e.exports=t},1909:(e,t,n)=>{"use strict";n.d(t,{Z:()=>u});var i=n(7462),o=n(7294),a=n(2263),r=n(3945),l=n(8182),s=n(2175),p=n(4866),d=n(5162),c=n(814);const u=e=>{let{children:t,fileName:n,...u}=e;const m=t,{code:k}=(0,s.transform)(m,{plugins:["transform-typescript"],retainLines:!0}),{siteConfig:{customFields:{prettierConfig:h}}}=(0,a.Z)(),f=(0,r.format)(k,{parser:l.parsers.babel.parse,...h}),y=n?`${n}.ts`:void 0,g=n?`${n}.js`:void 0;return o.createElement(p.Z,{groupId:"ts-js-choice"},o.createElement(d.Z,{value:"ts",label:"Typescript",default:!0},o.createElement(c.Z,(0,i.Z)({},u,{className:"language-ts",title:y}),m)),o.createElement(d.Z,{value:"js",label:"Javascript"},o.createElement(c.Z,(0,i.Z)({},u,{className:"language-js",title:g}),f)))}},1549:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>D,contentTitle:()=>I,default:()=>j,frontMatter:()=>T,metadata:()=>K,toc:()=>x});var i=n(7462),o=n(7294),a=n(3905),r=n(814);const l=e=>{let{children:t,funcName:n="main",funcEnd:i="}",snippets:a,leadingSpaces:l=2,...s}=e;const p=t.split(/\r?\n/);let d="";if(a)d=JSON.parse(a).map((e=>Array.isArray(e)?p.slice(e[0],e[1]).map((e=>e.slice(l))).join("\n"):e)).join("\n");else if(n){let e,t;for(let i=0;i<p.length;i++)if(p[i].includes(n)){if(e=i,p[i].includes(" {"))break}else if(p[i].includes(" {")&&void 0!==e){e=i;break}for(let n=p.length-1;n>0;n--)if(p[n].includes(i)){t=n;break}d=p.slice(e+1,t).map((e=>e.slice(l))).join("\n")}return o.createElement(r.Z,s,d)};var s=n(2263),p=n(3945),d=n(8182),c=n(2175),u=n(4866),m=n(5162);const k=e=>{let{children:t,fileName:n,...a}=e;const r=t,{code:k}=(0,c.transform)(r,{plugins:["transform-typescript"],retainLines:!0}),{siteConfig:{customFields:{prettierConfig:h}}}=(0,s.Z)(),f=(0,p.format)(k,{parser:d.parsers.babel.parse,...h}),y=n?`${n}.ts`:void 0,g=n?`${n}.js`:void 0;return o.createElement(u.Z,{groupId:"ts-js-choice"},o.createElement(m.Z,{value:"ts",label:"Typescript",default:!0},o.createElement(l,(0,i.Z)({},a,{className:"language-ts",title:y}),r)),o.createElement(m.Z,{value:"js",label:"Javascript"},o.createElement(l,(0,i.Z)({},a,{className:"language-js",title:g}),f)))};n(1909);const h="/* eslint-disable prefer-const */\nimport type { ApiPromise } from '@polkadot/api'\n\nimport * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function main(): Promise<ApiPromise> {\n  let api = await Kilt.connect('wss://spiritnet.kilt.io/')\n\n  return api\n}\n",f="/* eslint-disable prefer-const */\nimport type { ApiPromise } from '@polkadot/api'\n\nimport * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function main(): Promise<ApiPromise> {\n  let api = await Kilt.connect('wss://peregrine.kilt.io/')\n\n  return api\n}\n",y="/* eslint-disable prefer-const */\nimport * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function main(): Promise<Kilt.DidUri | null> {\n  let apiConfig = Kilt.ConfigService.get('api')\n  const encodedJohnDoeDetails =\n    await apiConfig.call.did.queryByWeb3Name('john_doe')\n\n  // This function will throw if johnDoeOwner does not exist\n  const {\n    document: { uri }\n  } = Kilt.Did.linkedInfoFromChain(encodedJohnDoeDetails)\n  console.log(`My name is john_doe and this is my DID: \"${uri}\"`)\n\n  return uri\n}\n",g="import * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function main(\n  uri: Kilt.DidUri\n): Promise<Kilt.DidServiceEndpoint[]> {\n  const johnDoeDidDocument = await Kilt.Did.resolve(uri)\n  console.log(`John Doe's DID Document:`)\n  console.log(JSON.stringify(johnDoeDidDocument, null, 2))\n\n  const endpoints = johnDoeDidDocument?.document?.service\n  if (!endpoints) {\n    console.log('No endpoints for the DID.')\n    return []\n  }\n\n  console.log('Endpoints:')\n  console.log(JSON.stringify(endpoints, null, 2))\n\n  return endpoints\n}\n",N="import axios from 'axios'\n\nimport * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function main(\n  endpoints: Kilt.DidServiceEndpoint[]\n): Promise<Kilt.ICredential> {\n  const {\n    data: [{ credential }]\n  } = await axios.get<Kilt.KiltPublishedCredentialCollectionV1>(\n    endpoints[0].serviceEndpoint[0]\n  )\n  console.log(`Credentials: ${JSON.stringify(credential, null, 2)}`)\n  return credential\n}\n",v="import * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function main(credential: Kilt.ICredential): Promise<void> {\n  try {\n    const { attester, revoked } =\n      await Kilt.Credential.verifyCredential(credential)\n\n    // Verify that the credential is not revoked. Exception caught by the catch {} block below.\n    if (revoked) {\n      throw new Error('The credential has been revoked, hence it is not valid.')\n    }\n    console.log(\n      `John Doe's credential is valid and has been attested by ${attester}!`\n    )\n  } catch {\n    console.log(\"John Doe's credential is not valid.\")\n  }\n}\n",b="import * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function main(): Promise<void> {\n  await Kilt.disconnect()\n}\n",T={id:"quickstart",title:"Quickstart"},I=void 0,K={unversionedId:"develop/sdk/quickstart",id:"develop/sdk/quickstart",title:"Quickstart",description:"Get started with KILT by following this guide, which teaches you to:",source:"@site/docs/develop/01_sdk/01_quickstart.md",sourceDirName:"develop/01_sdk",slug:"/develop/sdk/quickstart",permalink:"/docs/develop/sdk/quickstart",draft:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/01_sdk/01_quickstart.md",tags:[],version:"current",lastUpdatedAt:1699352606,formattedLastUpdatedAt:"Nov 7, 2023",sidebarPosition:1,frontMatter:{id:"quickstart",title:"Quickstart"},sidebar:"sdk",next:{title:"Generate DID keys",permalink:"/docs/develop/sdk/cookbook/dids/key-generation"}},D={},x=[{value:"Setup",id:"setup",level:2},{value:"Import the KILT SDK",id:"import-the-kilt-sdk",level:3},{value:"Connect to the KILT Blockchain",id:"connect-to-the-kilt-blockchain",level:3},{value:"Query a KILT Identity",id:"query-a-kilt-identity",level:2},{value:"Retrieve and Verify a Credential",id:"retrieve-and-verify-a-credential",level:2}],w={toc:x},C="wrapper";function j(e){let{components:t,...n}=e;return(0,a.kt)(C,(0,i.Z)({},w,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Get started with KILT by following this guide, which teaches you to:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Import the ",(0,a.kt)("strong",{parentName:"li"},"KILT SDK")," into your project"),(0,a.kt)("li",{parentName:"ol"},"Connect to the ",(0,a.kt)("strong",{parentName:"li"},"KILT blockchain")),(0,a.kt)("li",{parentName:"ol"},"Query a ",(0,a.kt)("strong",{parentName:"li"},"web3name")," to retrieve its ",(0,a.kt)("strong",{parentName:"li"},"DID")),(0,a.kt)("li",{parentName:"ol"},"Verify a ",(0,a.kt)("strong",{parentName:"li"},"credential")," using a ",(0,a.kt)("strong",{parentName:"li"},"DID service"))),(0,a.kt)("admonition",{title:"Prerequisites",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"This quickstart guide provides hands-on experience to enhance your understanding of KILT.\nBasic knowledge of JavaScript and command-line tools is recommended.")),(0,a.kt)("h2",{id:"setup"},"Setup"),(0,a.kt)("p",null,"Create a new project and directory and move into the directory by running ",(0,a.kt)("inlineCode",{parentName:"p"},"mkdir kilt-rocks && cd kilt-rocks"),"."),(0,a.kt)(u.Z,{groupId:"ts-js-choice",mdxType:"Tabs"},(0,a.kt)(m.Z,{value:"ts",label:"Typescript",default:!0,mdxType:"TabItem"},(0,a.kt)("p",null,"Inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"kilt-rocks")," project directory, install the ",(0,a.kt)("strong",{parentName:"p"},"KILT SDK"),", ",(0,a.kt)("strong",{parentName:"p"},"Typescript"),", ",(0,a.kt)("strong",{parentName:"p"},"ts-node"),", and ",(0,a.kt)("strong",{parentName:"p"},"Axios")," dependencies:"),(0,a.kt)(u.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,a.kt)(m.Z,{value:"npm",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm init -y\nnpm install @kiltprotocol/sdk-js ts-node typescript axios\n"))),(0,a.kt)(m.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"yarn init -y\nyarn add @kiltprotocol/sdk-js ts-node typescript axios\n"))),(0,a.kt)(m.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm init -y\npnpm add @kiltprotocol/sdk-js ts-node typescript axios\n")))),(0,a.kt)("p",null,"With the required dependencies installed, create a TypeScript file with ",(0,a.kt)("inlineCode",{parentName:"p"},"touch quickstart.ts"),".")),(0,a.kt)(m.Z,{value:"js",label:"Javascript",mdxType:"TabItem"},(0,a.kt)("p",null,"From inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"kilt-rocks")," project directory, install the ",(0,a.kt)("strong",{parentName:"p"},"KILT SDK"),", ",(0,a.kt)("strong",{parentName:"p"},"Node"),", and ",(0,a.kt)("strong",{parentName:"p"},"Axios")," dependencies:"),(0,a.kt)(u.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,a.kt)(m.Z,{value:"npm",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm init -y\nnpm install @kiltprotocol/sdk-js node axios\n"))),(0,a.kt)(m.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"yarn init -y\nyarn add @kiltprotocol/sdk-js node axios\n"))),(0,a.kt)(m.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm init -y\npnpm add @kiltprotocol/sdk-js node axios\n")))),(0,a.kt)("p",null,"With the required dependencies installed, create a JavaScript file with ",(0,a.kt)("inlineCode",{parentName:"p"},"touch quickstart.js"),"."),(0,a.kt)("p",null,"To enable ES modules in your project, add ",(0,a.kt)("inlineCode",{parentName:"p"},'"type": "module"')," to the ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," file."))),(0,a.kt)("p",null,"Declare an ",(0,a.kt)("inlineCode",{parentName:"p"},"async main")," function in the ",(0,a.kt)("inlineCode",{parentName:"p"},"quickstart.ts")," file that executes the rest of the code in this quickstart and call the ",(0,a.kt)("inlineCode",{parentName:"p"},"main()")," function by default:"),(0,a.kt)("p",null,"{/",(0,a.kt)("em",{parentName:"p"}," TODO: Do we need to test this or provide JS/TS equivalent? "),"/}"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"async function main() {\n}\n\nmain()\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"With the setup completed, let's get started! \ud83d\udd25")),(0,a.kt)("h3",{id:"import-the-kilt-sdk"},"Import the KILT SDK"),(0,a.kt)("p",null,"Begin by importing the ",(0,a.kt)("strong",{parentName:"p"},"KILT SDK")," and ",(0,a.kt)("strong",{parentName:"p"},"Axios")," at the top of the file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import * as Kilt from '@kiltprotocol/sdk-js'\nimport axios from 'axios'\n")),(0,a.kt)("p",null,"Now, you can access the SDK and all its functionality.\nThe next step is connecting to the ",(0,a.kt)("strong",{parentName:"p"},"KILT blockchain"),"."),(0,a.kt)("h3",{id:"connect-to-the-kilt-blockchain"},"Connect to the KILT Blockchain"),(0,a.kt)("p",null,"To perform operations that rely on the ",(0,a.kt)("strong",{parentName:"p"},"KILT blockchain"),", such as querying and verifying a credential, you must first connect to the ",(0,a.kt)("strong",{parentName:"p"},"KILT blockchain"),"."),(0,a.kt)("p",null,"Within the ",(0,a.kt)("inlineCode",{parentName:"p"},"main")," function, configure the SDK to connect to a KILT node using the ",(0,a.kt)("inlineCode",{parentName:"p"},"Kilt.connect()")," method:"),(0,a.kt)(u.Z,{groupId:"chain-choice",mdxType:"Tabs"},(0,a.kt)(m.Z,{value:"pere",label:"Peregrine (Testnet)",default:!0,mdxType:"TabItem"},(0,a.kt)("p",null,"Peregrine is the development blockchain. Connect to this network for testing and development purposes."),(0,a.kt)(l,{className:"language-ts",funcEnd:"return",mdxType:"SnippetBlock"},f)),(0,a.kt)(m.Z,{value:"spirit",label:"Spiritnet (Production)",mdxType:"TabItem"},(0,a.kt)("p",null,"Spiritnet is the production blockchain. When you are ready to publish your DApp, connect to the Spiritnet network for production purposes."),(0,a.kt)(l,{className:"language-ts",funcEnd:"return",mdxType:"SnippetBlock"},h))),(0,a.kt)("p",null,"To ensure proper cleanup, call the ",(0,a.kt)("inlineCode",{parentName:"p"},"Kilt.disconnect()")," function at the bottom of the ",(0,a.kt)("inlineCode",{parentName:"p"},"main()")," function.\nYou should add all other code before this function call:"),(0,a.kt)(l,{className:"language-ts",mdxType:"SnippetBlock"},b),(0,a.kt)("p",null,"By adding ",(0,a.kt)("inlineCode",{parentName:"p"},"await Kilt.disconnect()"),", you ensure that the connection to the blockchain node is properly closed when the script finishes executing, which helps maintain the integrity of your application and is a good practice to follow."),(0,a.kt)("p",null,"Run the code by calling the name of the file.\nIf you set up everything correctly, you should see no output showing that your code connected to the ",(0,a.kt)("strong",{parentName:"p"},"KILT blockchain"),"."),(0,a.kt)(u.Z,{groupId:"ts-js-choice",mdxType:"Tabs"},(0,a.kt)(m.Z,{value:"ts",label:"Typescript",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"yarn ts-node quickstart.ts\n"))),(0,a.kt)(m.Z,{value:"js",label:"Javascript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"node quickstart.js\n")))),(0,a.kt)("p",null,"As you add to the code in this file, you can always run it with the same command."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Congratulations! \ud83d\udd25")),(0,a.kt)("p",null,"You have connected to a KILT blockchain node.\nThe next step is to start querying data from the blockchain."),(0,a.kt)("h2",{id:"query-a-kilt-identity"},"Query a KILT Identity"),(0,a.kt)("p",null,"The following code queries information related to a ",(0,a.kt)("strong",{parentName:"p"},"web3name")," (",(0,a.kt)("inlineCode",{parentName:"p"},"john_doe"),") and uses it to retrieve the ",(0,a.kt)("strong",{parentName:"p"},"KILT DID")," linked to it."),(0,a.kt)("p",null,"Between the ",(0,a.kt)("inlineCode",{parentName:"p"},"Kilt.connect()")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Kilt.disconnect()")," lines, add the following code:"),(0,a.kt)(l,{className:"language-ts",funcEnd:"return",mdxType:"SnippetBlock"},y),(0,a.kt)("p",null,"Try running the code and check the result."),(0,a.kt)("p",null,"Did you get the DID? You now have ",(0,a.kt)("inlineCode",{parentName:"p"},"john_doe"),"'s DID.\nThe next step is to see if ",(0,a.kt)("inlineCode",{parentName:"p"},"john_doe")," has any publicly linked KILT credentials to retrieve and verify."),(0,a.kt)("h2",{id:"retrieve-and-verify-a-credential"},"Retrieve and Verify a Credential"),(0,a.kt)("p",null,"A ",(0,a.kt)("strong",{parentName:"p"},"KILT DID")," can expose services that allow external resources to be linked to the DID.\n",(0,a.kt)("strong",{parentName:"p"},"KILT credentials")," represent one type of external resource."),(0,a.kt)("p",null,"You can retrieve the ",(0,a.kt)("strong",{parentName:"p"},"services")," attached to John Doe's DID and see if they link to any public credentials to ",(0,a.kt)("strong",{parentName:"p"},"query")," and ",(0,a.kt)("strong",{parentName:"p"},"verify"),"."),(0,a.kt)("p",null,"Add the following code after the code you added in the previous step but before the ",(0,a.kt)("inlineCode",{parentName:"p"},"await Kilt.disconnect()"),".\nIt retrieves the services exposed by the DID found for ",(0,a.kt)("inlineCode",{parentName:"p"},"john_doe"),":"),(0,a.kt)(l,{className:"language-ts",funcEnd:"return",mdxType:"SnippetBlock"},g),(0,a.kt)("p",null,"The code should print endpoints as JSON."),(0,a.kt)("p",null,"The next step is to see if you can find a credential among them.\nYou do this by selecting one of the endpoints and querying the URL to see if it returns a KILT credential collection as described in the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/KILTprotocol/spec-KiltPublishedCredentialCollectionV1"},"KiltPublishedCredentialCollectionV1 specification"),"."),(0,a.kt)("p",null,"Add the following code after the code you added in the previous step but before ",(0,a.kt)("inlineCode",{parentName:"p"},"await Kilt.disconnect()"),":"),(0,a.kt)(k,{funcName:"Promise<Kilt.ICredential>",funcEnd:"return",mdxType:"TsJsSnippet"},N),(0,a.kt)("p",null,"If the script completes without errors, you retrieved the published credential using the URL specified in the service."),(0,a.kt)("p",null,"The next step is to make sure the credential is ",(0,a.kt)("strong",{parentName:"p"},"valid")," and has a valid ",(0,a.kt)("strong",{parentName:"p"},"structure"),"."),(0,a.kt)("p",null,"The following code outputs a string depending on whether the credential is valid, revoked, or not valid.\nAdd it before ",(0,a.kt)("inlineCode",{parentName:"p"},"await Kilt.disconnect()"),":"),(0,a.kt)(l,{className:"language-ts",mdxType:"SnippetBlock"},v),(0,a.kt)("p",null,"Run the code and wait to see if you can retrieve ",(0,a.kt)("strong",{parentName:"p"},"and")," verify one of John Doe's credentials!"),(0,a.kt)("admonition",{title:"Next steps",type:"info"},(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"If you want to explore more of KILT's features, read our ",(0,a.kt)("a",{parentName:"li",href:"/docs/concepts/what-is-kilt"},"Concepts section"),"."),(0,a.kt)("li",{parentName:"ul"},"If you want to dive deeper into the SDK, read the next section, ",(0,a.kt)("a",{parentName:"li",href:"/docs/develop/sdk/cookbook/dids/light-did-creation"},"the KILT Cookbook"),"."))))}j.isMDXComponent=!0}}]);