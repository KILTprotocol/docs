(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7821],{5380:e=>{function o(e){var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}o.keys=()=>[],o.resolve=o,o.id=5380,e.exports=o},1909:(e,o,t)=>{"use strict";t.d(o,{Z:()=>u});var n=t(7462),a=t(7294),s=t(2263),r=t(3945),i=t(8182),d=t(2175),l=t(4866),c=t(5162),m=t(814);const u=e=>{let{children:o,fileName:t,...u}=e;const p=o,{code:b}=(0,d.transform)(p,{plugins:["transform-typescript"],retainLines:!0}),{siteConfig:{customFields:{prettierConfig:k}}}=(0,s.Z)(),w=(0,r.format)(b,{parser:i.parsers.babel.parse,...k}),h=t?`${t}.ts`:void 0,v=t?`${t}.js`:void 0;return a.createElement(l.Z,{groupId:"ts-js-choice"},a.createElement(c.Z,{value:"ts",label:"Typescript",default:!0},a.createElement(m.Z,(0,n.Z)({},u,{className:"language-ts",title:h}),p)),a.createElement(c.Z,{value:"js",label:"Javascript"},a.createElement(m.Z,(0,n.Z)({},u,{className:"language-js",title:v}),w)))}},9641:(e,o,t)=>{"use strict";t.r(o),t.d(o,{assets:()=>c,contentTitle:()=>d,default:()=>b,frontMatter:()=>i,metadata:()=>l,toc:()=>m});var n=t(7462),a=(t(7294),t(3905)),s=t(1909);const r="import * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function queryDidDocument(\n  web3Name: Kilt.Did.Web3Name\n): Promise<Kilt.DidDocument> {\n  const api = Kilt.ConfigService.get('api')\n\n  console.log(`Querying the blockchain for the web3name \"${web3Name}\"`)\n  // Query the owner of the provided web3name.\n  const encodedWeb3NameOwner = await api.call.did.queryByWeb3Name(web3Name)\n\n  // Extract the DidDocument and other linked information from the encodedWeb3NameOwner.\n  const { document } = Kilt.Did.linkedInfoFromChain(encodedWeb3NameOwner)\n\n  return document\n}\n",i={id:"web3name-query",title:"Resolve a web3name"},d=void 0,l={unversionedId:"develop/sdk/cookbook/web3names/web3name-query",id:"develop/sdk/cookbook/web3names/web3name-query",title:"Resolve a web3name",description:"A web3name can be resolved in a similar manner to how a DID is resolved.",source:"@site/docs/develop/01_sdk/02_cookbook/02_web3names/04_query.md",sourceDirName:"develop/01_sdk/02_cookbook/02_web3names",slug:"/develop/sdk/cookbook/web3names/web3name-query",permalink:"/docs/develop/sdk/cookbook/web3names/web3name-query",draft:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/01_sdk/02_cookbook/02_web3names/04_query.md",tags:[],version:"current",lastUpdatedAt:1701504096,formattedLastUpdatedAt:"Dec 2, 2023",sidebarPosition:4,frontMatter:{id:"web3name-query",title:"Resolve a web3name"},sidebar:"sdk",previous:{title:"Release a web3name",permalink:"/docs/develop/sdk/cookbook/web3names/web3name-release"},next:{title:"Link an Account to a KILT DID",permalink:"/docs/develop/sdk/cookbook/account_linking/account-link"}},c={},m=[],u={toc:m},p="wrapper";function b(e){let{components:o,...t}=e;return(0,a.kt)(p,(0,n.Z)({},u,t,{components:o,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"A web3name can be resolved in a similar manner to ",(0,a.kt)("a",{parentName:"p",href:"/docs/develop/sdk/cookbook/dids/did-query"},"how a DID is resolved"),".\nResolving the web3name will provide the same information as resolving a DID does."),(0,a.kt)("p",null,"To query and retrieve the DID document associated with a web3name, you can use the following code example:"),(0,a.kt)(s.Z,{mdxType:"TsJsBlock"},r),(0,a.kt)("p",null,"In the code example above, the ",(0,a.kt)("inlineCode",{parentName:"p"},"queryDidDocument")," function takes a web3Name parameter, which represents the web3name to be resolved.\nIt internally uses the ",(0,a.kt)("inlineCode",{parentName:"p"},"api.call.did.queryByWeb3Name")," method to query the information of the provided web3name from the blockchain."),(0,a.kt)("p",null,"The function then decodes the result using ",(0,a.kt)("inlineCode",{parentName:"p"},"Kilt.Did.linkedInfoFromChain")," to extract the associated DID document and any other linked blockchain accounts. Finally, it returns the resolved DID document."))}b.isMDXComponent=!0}}]);