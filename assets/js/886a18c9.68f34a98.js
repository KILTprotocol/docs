(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2892],{5380:n=>{function i(n){var i=new Error("Cannot find module '"+n+"'");throw i.code="MODULE_NOT_FOUND",i}i.keys=()=>[],i.resolve=i,i.id=5380,n.exports=i},2640:(n,i,t)=>{"use strict";t.r(i),t.d(i,{assets:()=>k,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>u,toc:()=>p});var e=t(5893),o=t(1151),c=t(1909);const s="import * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function unlinkAccountFromDid(\n  did: Kilt.DidUri,\n  submitterAccount: Kilt.KiltKeyringPair,\n  linkedAccountAddress: Kilt.KiltAddress,\n  signCallback: Kilt.SignExtrinsicCallback\n): Promise<void> {\n  const api = Kilt.ConfigService.get('api')\n\n  // The DID owner removes the link between itself and the specified account.\n  const accountUnlinkTx = api.tx.didLookup.removeAccountAssociation({\n    AccountId32: linkedAccountAddress\n  })\n  const authorizedAccountUnlinkTx = await Kilt.Did.authorizeTx(\n    did,\n    accountUnlinkTx,\n    signCallback,\n    submitterAccount.address\n  )\n\n  await Kilt.Blockchain.signAndSubmitTx(\n    authorizedAccountUnlinkTx,\n    submitterAccount\n  )\n}\n",a="import * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function unlinkDidFromAccount(\n  linkOwnerAccount: Kilt.KeyringPair\n): Promise<void> {\n  const api = Kilt.ConfigService.get('api')\n\n  // The tx does not need to be authorized by a DID, but the submitter account removes its own link.\n  const accountUnlinkTx = api.tx.didLookup.removeSenderAssociation()\n\n  await Kilt.Blockchain.signAndSubmitTx(accountUnlinkTx, linkOwnerAccount)\n}\n",l="import * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function reclaimLinkDeposit(\n  submitterAddress: Kilt.KeyringPair,\n  linkedAccountAddress: Kilt.KiltAddress\n): Promise<void> {\n  const api = Kilt.ConfigService.get('api')\n\n  // The tx does not need to be authorized by a DID, but the deposit payer's account claims the deposit and removes the link.\n  const accountUnlinkTx = api.tx.didLookup.reclaimDeposit({\n    AccountId32: linkedAccountAddress\n  })\n\n  await Kilt.Blockchain.signAndSubmitTx(accountUnlinkTx, submitterAddress)\n}\n",r={id:"account-unlink",title:"Unlink an Account From a KILT DID"},d=void 0,u={id:"develop/sdk/cookbook/account_linking/account-unlink",title:"Unlink an Account From a KILT DID",description:"Similar to the way a new account to DID link is created, removing a link can happen in one of three ways:",source:"@site/docs/develop/01_sdk/02_cookbook/03_account_linking/03_unlink.md",sourceDirName:"develop/01_sdk/02_cookbook/03_account_linking",slug:"/develop/sdk/cookbook/account_linking/account-unlink",permalink:"/docs/develop/sdk/cookbook/account_linking/account-unlink",draft:!1,unlisted:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/01_sdk/02_cookbook/03_account_linking/03_unlink.md",tags:[],version:"current",lastUpdatedAt:1706696839,formattedLastUpdatedAt:"Jan 31, 2024",sidebarPosition:3,frontMatter:{id:"account-unlink",title:"Unlink an Account From a KILT DID"},sidebar:"sdk",previous:{title:"Query the web3name of an Account",permalink:"/docs/develop/sdk/cookbook/account_linking/account-name"},next:{title:"Create a CType",permalink:"/docs/develop/sdk/cookbook/claiming/ctype-creation"}},k={},p=[];function m(n){const i={li:"li",ol:"ol",p:"p",...(0,o.a)(),...n.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(i.p,{children:"Similar to the way a new account to DID link is created, removing a link can happen in one of three ways:"}),"\n",(0,e.jsxs)(i.ol,{children:["\n",(0,e.jsx)(i.li,{children:"The DID owner submits a transaction indicating which account to unlink:"}),"\n"]}),"\n",(0,e.jsx)(c.Z,{children:s}),"\n",(0,e.jsxs)(i.ol,{start:"2",children:["\n",(0,e.jsx)(i.li,{children:"The linked account submits a transaction indicating that the link with the DID should be removed:"}),"\n"]}),"\n",(0,e.jsx)(c.Z,{children:a}),"\n",(0,e.jsxs)(i.ol,{start:"3",children:["\n",(0,e.jsx)(i.li,{children:"The deposit payer submits a transaction indicating that they want to reclaim their deposit, which in turn removes the existing link between the specified account and DID:"}),"\n"]}),"\n",(0,e.jsx)(c.Z,{children:l})]})}function h(n={}){const{wrapper:i}={...(0,o.a)(),...n.components};return i?(0,e.jsx)(i,{...n,children:(0,e.jsx)(m,{...n})}):m(n)}},1909:(n,i,t)=>{"use strict";t.d(i,{Z:()=>k});t(7294);var e=t(2263),o=t(2175),c=t(4935),s=t(4990),a=t(9966),l=t(4866),r=t(5162),d=t(9286),u=t(5893);const k=n=>{let{children:i,fileName:t,...k}=n;const p=i,{code:m}=(0,o.transform)(p,{plugins:["transform-typescript"],retainLines:!0}),{siteConfig:{customFields:{prettierConfig:h}}}=(0,e.Z)(),f=c.WU(m,{parser:"babel",plugins:[s.Z,a.ZP],...h}).finally((()=>{var n=[{fileName:t?`${t}.ts`:void 0,fileContents:p,fileID:"ts",fileLabel:"Typescript"},{fileName:t?`${t}.js`:void 0,fileContents:f,fileID:"js",fileLabel:"Javascript"}];return(0,u.jsx)(u.Fragment,{children:(0,u.jsx)(l.Z,{groupId:"ts-js-choice",children:n.map((n=>(0,u.jsx)(r.Z,{value:n.fileID,label:n.fileLabel,default:!0,children:(0,u.jsx)(d.Z,{...k,className:"language-"+n.fileID,title:n.fileName,children:n.fileContents})})))})})}))}}}]);