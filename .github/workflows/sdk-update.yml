name: test-docs-examples

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Current stable staging tag"
        required: true

jobs:
  workshop:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Get current package version
        working-directory: code_examples/workshop
        id: kiltprotocol_sdk
        run: echo "::set-output name=current_tag::$(grep kiltprotocol/sdk-js package.json | awk -F \" '{print $4}')"
      - uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: '@kiltprotocol/sdk-js": "${{ steps.kiltprotocol_sdk.outputs.current_tag }}'
          replace: '@kiltprotocol/sdk-js": "${{ github.event.inputs.tag }}'
          include: "code_examples/**"
          exclude: "**/*.lock"
          regex: true
      - name: Test style conventions
        working-directory: code_examples/workshop
        run: |
          yarn install
          yarn lint

      - name: Run tests
        timeout-minutes: 60
        working-directory: code_examples/workshop
        env:
          NODE_OPTIONS: --unhandled-rejections=strict
          FAUCET_SEED: ${{ secrets.PEREGRINE_FAUCET_SEED }}
        run: |
          yarn install
          yarn run ts-node test.ts

  core_features:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Get current package version
        working-directory: code_examples/core_features
        id: kiltprotocol_sdk
        run: echo "::set-output name=current_tag::$(grep kiltprotocol/sdk-js package.json | awk -F \" '{print $4}')"
      - uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: '@kiltprotocol/sdk-js": "${{ steps.kiltprotocol_sdk.outputs.current_tag }}'
          replace: '@kiltprotocol/sdk-js": "${{ github.event.inputs.tag }}'
          include: "code_examples/**"
          exclude: "**/*.lock"
          regex: true
      - name: Test style conventions
        working-directory: code_examples/core_features
        run: |
          yarn install
          yarn lint

      - name: Run tests
        timeout-minutes: 60
        working-directory: code_examples/core_features
        env:
          NODE_OPTIONS: --unhandled-rejections=strict
          FAUCET_SEED: ${{ secrets.PEREGRINE_FAUCET_SEED }}
        run: |
          yarn install
          yarn run ts-node run_core_features.ts

  create_pull_request:
    runs-on: ubuntu-latest
    needs: [workshop]
    if: failure()
    steps:
      - uses: actions/checkout@v1
      - name: Get current package version
        working-directory: code_examples/core_features
        id: kiltprotocol_sdk
        run: echo "::set-output name=current_tag::$(grep kiltprotocol/sdk-js package.json | awk -F \" '{print $4}')"
      - uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: '${{ steps.kiltprotocol_sdk.outputs.current_tag }}'
          replace: '${{ github.event.inputs.tag }}'
          include: "docs/develop/03_workshop/**"
          regex: true
      - uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: '@kiltprotocol/sdk-js": "${{ steps.kiltprotocol_sdk.outputs.current_tag }}'
          replace: '@kiltprotocol/sdk-js": "${{ github.event.inputs.tag }}'
          include: "code_examples/**"
          exclude: "**/*.lock"
          regex: true
      - name: Regenerate yarn lock
        working-directory: code_examples/core_features
        run: |
          yarn install
          yarn lint
      - name: Regenerate yarn lock
        working-directory: code_examples/workshop
        run: |
          yarn install
          yarn lint
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.PAT }}
          base: develop
          delete-branch: true
          title: '[Chore] Latest sdk is compatible with docs'
          body: |
            Update docs
            - Auto-generated PR
          labels: |
            sdk
          draft: false
          add-paths: |
            *package.json
            *yarn.lock
            *.md
  create_issue:
     runs-on: ubuntu-latest
     needs: [workshop]
     if: success()
     steps:
       - name: Checkout
         uses: actions/checkout@v2
       - name: Generate version bump issue
         run: |
           cd .github/ISSUE_TEMPLATE
           echo "A [webhook test workflow](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) using the latest sdk on docs examples has failed." >> sdk-incompatible-with-docs.md
       - name: Create version bump issue
         uses: peter-evans/create-issue-from-file@v3
         with:
           title: new sdk ${{ github.event.client_payload.latestTag }} is incompatible with docs examples
           repository: ticket
           token: ${{ secrets.PAT }}
           content-filepath: .github/ISSUE_TEMPLATE/sdk-incompatible-with-docs.md
           labels: |
             :memo:  documentation
             \U0001F4DA release
             ðŸ§° sdk
