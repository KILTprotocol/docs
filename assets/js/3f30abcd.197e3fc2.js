(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9401],{25380:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=25380,e.exports=t},51909:(e,t,o)=>{"use strict";o.d(t,{Z:()=>p});var s=o(87462),d=o(67294),i=o(52263),n=o(73945),r=o(28182),l=o(12175),a=o(65488),c=o(85162),u=o(90814);const p=e=>{let{children:t,fileName:o,...p}=e;const k=t,{code:m}=(0,l.transform)(k,{plugins:["transform-typescript"],retainLines:!0}),{siteConfig:{customFields:{prettierConfig:D}}}=(0,i.Z)(),v=(0,n.format)(m,{parser:r.parsers.babel.parse,...D}),f=o?`${o}.ts`:void 0,h=o?`${o}.js`:void 0;return d.createElement(a.Z,{groupId:"ts-js-choice"},d.createElement(c.Z,{value:"ts",label:"Typescript",default:!0},d.createElement(u.Z,(0,s.Z)({},p,{className:"language-ts",title:f}),k)),d.createElement(c.Z,{value:"js",label:"Javascript"},d.createElement(u.Z,(0,s.Z)({},p,{className:"language-js",title:h}),v)))}},73386:(e,t,o)=>{"use strict";o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>n,metadata:()=>l,toc:()=>c});var s=o(87462),d=(o(67294),o(3905)),i=o(51909);const n={id:"did-query",title:"Resolve a DID"},r=void 0,l={unversionedId:"develop/sdk/cookbook/dids/did-query",id:"develop/sdk/cookbook/dids/did-query",title:"Resolve a DID",description:"Querying the state of a DID is called resolution.",source:"@site/docs/develop/01_sdk/02_cookbook/01_dids/05_full_did_query.md",sourceDirName:"develop/01_sdk/02_cookbook/01_dids",slug:"/develop/sdk/cookbook/dids/did-query",permalink:"/docs/develop/sdk/cookbook/dids/did-query",draft:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/01_sdk/02_cookbook/01_dids/05_full_did_query.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"did-query",title:"Resolve a DID"},sidebar:"sdk",previous:{title:"Sign Extrinsics With a Full DID",permalink:"/docs/develop/sdk/cookbook/dids/full-did-batch"},next:{title:"Generate and Verify a DID Signature",permalink:"/docs/develop/sdk/cookbook/dids/did-signature"}},a={},c=[],u={toc:c};function p(e){let{components:t,...o}=e;return(0,d.kt)("wrapper",(0,s.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,d.kt)("p",null,"Querying the state of a DID is called ",(0,d.kt)("strong",{parentName:"p"},"resolution"),".\nThe entity that queries the DID Document for a given DID, i.e., resolves it, is called a ",(0,d.kt)("strong",{parentName:"p"},"resolver"),"."),(0,d.kt)("p",null,"The KILT SDK provides such a resolver to use with KILT DIDs, as the snippet below shows:"),(0,d.kt)(i.Z,{mdxType:"TsJsBlock"},"import * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function queryFullDid(\n  didUri: Kilt.DidUri\n): Promise<Kilt.DidDocument | null> {\n  const { metadata, document } = await Kilt.Did.resolve(didUri)\n  if (metadata.deactivated) {\n    console.log(`DID ${didUri} has been deleted.`)\n    return null\n  } else if (document === undefined) {\n    console.log(`DID ${didUri} does not exist.`)\n    return null\n  } else {\n    return document\n  }\n}\n"),(0,d.kt)("admonition",{type:"note"},(0,d.kt)("p",{parentName:"admonition"},"The DID resolver can resolve both light and full DIDs.\nFor a more in-depth explanation about the KILT DID method and resolution, refer to our ",(0,d.kt)("a",{parentName:"p",href:"https://github.com/KILTprotocol/spec-kilt-did"},"specification"),".")))}p.isMDXComponent=!0}}]);