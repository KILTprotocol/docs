(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3722],{5764:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=5764,e.exports=t},3854:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var o=n(4848),i=n(8453),s=n(3172),r=n(4911);const a={id:"howto-integrate-nodejs",title:"NodeJS"},d=void 0,l={id:"develop/sdk/integrate/howto-integrate-nodejs",title:"NodeJS",description:"NodeJS is natively supported and doesn't require any additional setup.",source:"@site/docs/develop/01_sdk/04_integrate/01_nodejs.md",sourceDirName:"develop/01_sdk/04_integrate",slug:"/develop/sdk/integrate/howto-integrate-nodejs",permalink:"/docs/develop/sdk/integrate/howto-integrate-nodejs",draft:!1,unlisted:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/01_sdk/04_integrate/01_nodejs.md",tags:[],version:"current",lastUpdatedAt:1733496053e3,sidebarPosition:1,frontMatter:{id:"howto-integrate-nodejs",title:"NodeJS"},sidebar:"sdk",previous:{title:"How to Integrate",permalink:"/docs/develop/sdk/integrate/"},next:{title:"Browser",permalink:"/docs/develop/sdk/integrate/howto-integrate-browser"}},c={},p=[];function u(e){const t={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"NodeJS is natively supported and doesn't require any additional setup."}),"\n",(0,o.jsxs)(t.p,{children:["Have a look at these example ",(0,o.jsx)(t.code,{children:"package.json"})," and ",(0,o.jsx)(t.code,{children:"index.js"})," files for reference:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-json",children:'{\n  "name": "kilt-sdk-node-test",\n  "type": "module",\n  "version": "1.0.0",\n  "main": "index.js",\n  "license": "MIT",\n  "dependencies": {\n    "@kiltprotocol/sdk-js": "0.35.0"\n  }\n}\n'})}),"\n",(0,o.jsx)(s.A,{children:r.A})]})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},3172:(e,t,n)=>{"use strict";n.d(t,{A:()=>m});var o=n(6540),i=n(4586),s=n(6352),r=n(8463),a=n(5283),d=n(6745),l=n(1470),c=n(9365),p=n(1432),u=n(4848);const m=e=>{let{children:t,fileName:n,...m}=e;const g=t,[f,h]=(0,o.useState)("# loading code..."),{siteConfig:{customFields:{prettierConfig:k}}}=(0,i.A)(),j=(0,o.useMemo)((()=>{const{code:e}=(0,s.transform)(g,{plugins:["transform-typescript"],retainLines:!0}),t=["./generateAccount","./generateKeypairs","./ctypeSchema","./createClaim","./generateLightDid","../attester/ctypeSchema","../claimer/generateLightDid","../claimer/generateCredential","./claimer/createPresentation","./claimer/generateKeypairs","./claimer/generateLightDid"];let n=e.replace(/from\s+['"](.+)['"]/g,((e,n)=>t.includes(n)?`from '${n}.js'`:e));return n=n.replace("if (require.main === module)","if (process.argv[1] === new URL(import.meta.url).pathname)"),n}),[g]);(0,o.useEffect)((()=>{r.GP(j,{parser:"babel",plugins:[a.A,d.Ay],...k}).then(h)}),[k,j]);const v=[{fileName:n?`${n}.ts`:void 0,fileContents:g,fileID:"ts",fileLabel:"Typescript"},{fileName:n?`${n}.js`:void 0,fileContents:f,fileID:"js",fileLabel:"Javascript"}];return(0,u.jsx)(u.Fragment,{children:(0,u.jsx)(l.A,{groupId:"ts-js-choice",children:v.map((e=>(0,u.jsx)(c.A,{value:e.fileID,label:e.fileLabel,default:!0,children:(0,u.jsx)(p.A,{...m,className:"language-"+e.fileID,title:e.fileName,children:e.fileContents})})))})})}},4911:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});const o='import * as Kilt from \'@kiltprotocol/sdk-js\'\n\nexport async function queryAccountWeb3Name(\n  lookupAccountAddress: Kilt.KiltAddress\n): Promise<Kilt.Did.Web3Name | null> {\n  const api = Kilt.ConfigService.get(\'api\')\n\n  const encodedLinkedDetails = await api.call.did.queryByAccount(\n    Kilt.Did.accountToChain(lookupAccountAddress)\n  )\n  const { web3Name } = Kilt.Did.linkedInfoFromChain(encodedLinkedDetails)\n  if (web3Name) {\n    console.log(\n      `web3name for account "${lookupAccountAddress}" -> "${web3Name}"`\n    )\n  } else {\n    console.log(\n      `Account "${lookupAccountAddress}" does not have a linked web3name.`\n    )\n  }\n\n  return web3Name\n}\n'}}]);