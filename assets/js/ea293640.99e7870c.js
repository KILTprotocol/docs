(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9181],{5764:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=5764,e.exports=t},6759:(e,t,i)=>{"use strict";i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>m});var n=i(4848),a=i(8453),o=i(3172);const s="import * as Kilt from '@kiltprotocol/sdk-js'\n\nexport function requestAttestation(\n  claimer: Kilt.DidDocument,\n  ctype: Kilt.ICType\n): Kilt.ICredential {\n  // The claimer generates the claim they would like to get attested.\n  const claim = Kilt.Claim.fromCTypeAndClaimContents(\n    ctype,\n    {\n      name: 'Alice',\n      age: 29,\n      id: '123456789987654321'\n    },\n    claimer.uri\n  )\n\n  const credential = Kilt.Credential.fromClaim(claim)\n  return credential\n}\n",r={id:"attestation-request",title:"Request an Attestation"},l=void 0,c={id:"develop/sdk/cookbook/claiming/attestation-request",title:"Request an Attestation",description:"To obtain credentials, Claimers have to request an attestation for a set of claims from an Attester.",source:"@site/docs/develop/01_sdk/02_cookbook/04_claiming/02_attestation_request.md",sourceDirName:"develop/01_sdk/02_cookbook/04_claiming",slug:"/develop/sdk/cookbook/claiming/attestation-request",permalink:"/docs/develop/sdk/cookbook/claiming/attestation-request",draft:!1,unlisted:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/01_sdk/02_cookbook/04_claiming/02_attestation_request.md",tags:[],version:"current",lastUpdatedAt:172198217e4,sidebarPosition:2,frontMatter:{id:"attestation-request",title:"Request an Attestation"},sidebar:"sdk",previous:{title:"Create a CType",permalink:"/docs/develop/sdk/cookbook/claiming/ctype-creation"},next:{title:"Attest a Claim (Issue a Credential)",permalink:"/docs/develop/sdk/cookbook/claiming/attestation-creation"}},d={},m=[];function p(e){const t={admonition:"admonition",code:"code",p:"p",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["To obtain credentials, Claimers have to request an attestation for a set of claims from an Attester.\nThe resulting object is a ",(0,n.jsx)(t.code,{children:"Credential"}),", which can be created following the snippet below."]}),"\n",(0,n.jsx)(t.p,{children:"This process does not involve any interaction with the KILT blockchain, but is simply a communication channel where the Claimer and the Attester can communicate."}),"\n",(0,n.jsx)(o.A,{children:s}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsx)(t.p,{children:"The structure of the claims must respect the schema defined in the specified CType.\nAttesters (and Verifiers) will reject claims that fail to verify correctly."})})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},3172:(e,t,i)=>{"use strict";i.d(t,{A:()=>u});var n=i(6540),a=i(4586),o=i(6352),s=i(8463),r=i(5283),l=i(6745),c=i(1470),d=i(9365),m=i(1432),p=i(4848);const u=e=>{let{children:t,fileName:i,...u}=e;const f=t,[h,g]=(0,n.useState)("# loading code..."),{siteConfig:{customFields:{prettierConfig:k}}}=(0,a.A)(),C=(0,n.useMemo)((()=>{const{code:e}=(0,o.transform)(f,{plugins:["transform-typescript"],retainLines:!0}),t=["./generateAccount","./generateKeypairs","./ctypeSchema","./createClaim","./generateLightDid","../attester/ctypeSchema","../claimer/generateLightDid","../claimer/generateCredential","./claimer/createPresentation","./claimer/generateKeypairs","./claimer/generateLightDid"];let i=e.replace(/from\s+['"](.+)['"]/g,((e,i)=>t.includes(i)?`from '${i}.js'`:e));return i=i.replace("if (require.main === module)","if (process.argv[1] === new URL(import.meta.url).pathname)"),i}),[f]);(0,n.useEffect)((()=>{s.GP(C,{parser:"babel",plugins:[r.A,l.Ay],...k}).then(g)}),[k,C]);const b=[{fileName:i?`${i}.ts`:void 0,fileContents:f,fileID:"ts",fileLabel:"Typescript"},{fileName:i?`${i}.js`:void 0,fileContents:h,fileID:"js",fileLabel:"Javascript"}];return(0,p.jsx)(p.Fragment,{children:(0,p.jsx)(c.A,{groupId:"ts-js-choice",children:b.map((e=>(0,p.jsx)(d.A,{value:e.fileID,label:e.fileLabel,default:!0,children:(0,p.jsx)(m.A,{...u,className:"language-"+e.fileID,title:e.fileName,children:e.fileContents})})))})})}}}]);