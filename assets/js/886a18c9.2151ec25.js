(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2892],{5380:n=>{function t(n){var t=new Error("Cannot find module '"+n+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=5380,n.exports=t},2640:(n,t,i)=>{"use strict";i.r(t),i.d(t,{assets:()=>k,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>u,toc:()=>p});var e=i(5893),o=i(1151),c=i(1909);const s="import * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function unlinkAccountFromDid(\n  did: Kilt.DidUri,\n  submitterAccount: Kilt.KiltKeyringPair,\n  linkedAccountAddress: Kilt.KiltAddress,\n  signCallback: Kilt.SignExtrinsicCallback\n): Promise<void> {\n  const api = Kilt.ConfigService.get('api')\n\n  // The DID owner removes the link between itself and the specified account.\n  const accountUnlinkTx = api.tx.didLookup.removeAccountAssociation({\n    AccountId32: linkedAccountAddress\n  })\n  const authorizedAccountUnlinkTx = await Kilt.Did.authorizeTx(\n    did,\n    accountUnlinkTx,\n    signCallback,\n    submitterAccount.address\n  )\n\n  await Kilt.Blockchain.signAndSubmitTx(\n    authorizedAccountUnlinkTx,\n    submitterAccount\n  )\n}\n",a="import * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function unlinkDidFromAccount(\n  linkOwnerAccount: Kilt.KeyringPair\n): Promise<void> {\n  const api = Kilt.ConfigService.get('api')\n\n  // The tx does not need to be authorized by a DID, but the submitter account removes its own link.\n  const accountUnlinkTx = api.tx.didLookup.removeSenderAssociation()\n\n  await Kilt.Blockchain.signAndSubmitTx(accountUnlinkTx, linkOwnerAccount)\n}\n",l="import * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function reclaimLinkDeposit(\n  submitterAddress: Kilt.KeyringPair,\n  linkedAccountAddress: Kilt.KiltAddress\n): Promise<void> {\n  const api = Kilt.ConfigService.get('api')\n\n  // The tx does not need to be authorized by a DID, but the deposit payer's account claims the deposit and removes the link.\n  const accountUnlinkTx = api.tx.didLookup.reclaimDeposit({\n    AccountId32: linkedAccountAddress\n  })\n\n  await Kilt.Blockchain.signAndSubmitTx(accountUnlinkTx, submitterAddress)\n}\n",r={id:"account-unlink",title:"Unlink an Account From a KILT DID"},d=void 0,u={id:"develop/sdk/cookbook/account_linking/account-unlink",title:"Unlink an Account From a KILT DID",description:"Similar to the way a new account to DID link is created, removing a link can happen in one of three ways:",source:"@site/docs/develop/01_sdk/02_cookbook/03_account_linking/03_unlink.md",sourceDirName:"develop/01_sdk/02_cookbook/03_account_linking",slug:"/develop/sdk/cookbook/account_linking/account-unlink",permalink:"/docs/develop/sdk/cookbook/account_linking/account-unlink",draft:!1,unlisted:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/01_sdk/02_cookbook/03_account_linking/03_unlink.md",tags:[],version:"current",lastUpdatedAt:1707906150,formattedLastUpdatedAt:"Feb 14, 2024",sidebarPosition:3,frontMatter:{id:"account-unlink",title:"Unlink an Account From a KILT DID"},sidebar:"sdk",previous:{title:"Query the web3name of an Account",permalink:"/docs/develop/sdk/cookbook/account_linking/account-name"},next:{title:"Create a CType",permalink:"/docs/develop/sdk/cookbook/claiming/ctype-creation"}},k={},p=[];function m(n){const t={li:"li",ol:"ol",p:"p",...(0,o.a)(),...n.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.p,{children:"Similar to the way a new account to DID link is created, removing a link can happen in one of three ways:"}),"\n",(0,e.jsxs)(t.ol,{children:["\n",(0,e.jsx)(t.li,{children:"The DID owner submits a transaction indicating which account to unlink:"}),"\n"]}),"\n",(0,e.jsx)(c.Z,{children:s}),"\n",(0,e.jsxs)(t.ol,{start:"2",children:["\n",(0,e.jsx)(t.li,{children:"The linked account submits a transaction indicating that the link with the DID should be removed:"}),"\n"]}),"\n",(0,e.jsx)(c.Z,{children:a}),"\n",(0,e.jsxs)(t.ol,{start:"3",children:["\n",(0,e.jsx)(t.li,{children:"The deposit payer submits a transaction indicating that they want to reclaim their deposit, which in turn removes the existing link between the specified account and DID:"}),"\n"]}),"\n",(0,e.jsx)(c.Z,{children:l})]})}function h(n={}){const{wrapper:t}={...(0,o.a)(),...n.components};return t?(0,e.jsx)(t,{...n,children:(0,e.jsx)(m,{...n})}):m(n)}},1909:(n,t,i)=>{"use strict";i.d(t,{Z:()=>p});var e=i(7294),o=i(2263),c=i(2175),s=i(4935),a=i(4990),l=i(9966),r=i(4866),d=i(5162),u=i(9286),k=i(5893);const p=n=>{let{children:t,fileName:i,...p}=n;const m=t,[h,f]=(0,e.useState)("# loading code..."),{siteConfig:{customFields:{prettierConfig:b}}}=(0,o.Z)(),g=(0,e.useMemo)((()=>{const{code:n}=(0,c.transform)(m,{plugins:["transform-typescript"],retainLines:!0});return n}),[m]);(0,e.useEffect)((()=>{s.WU(g,{parser:"babel",plugins:[a.Z,l.ZP],...b}).then(f)}),[b,g]);const x=[{fileName:i?`${i}.ts`:void 0,fileContents:m,fileID:"ts",fileLabel:"Typescript"},{fileName:i?`${i}.js`:void 0,fileContents:h,fileID:"js",fileLabel:"Javascript"}];return(0,k.jsx)(k.Fragment,{children:(0,k.jsx)(r.Z,{groupId:"ts-js-choice",children:x.map((n=>(0,k.jsx)(d.Z,{value:n.fileID,label:n.fileLabel,default:!0,children:(0,k.jsx)(u.Z,{...p,className:"language-"+n.fileID,title:n.fileName,children:n.fileContents})})))})})}}}]);