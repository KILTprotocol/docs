"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1517],{1212:(l,e,o)=>{o.r(e),o.d(e,{assets:()=>a,contentTitle:()=>p,default:()=>f,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var t=o(7462),n=(o(7294),o(3905)),i=o(6823);const s={id:"howto-integrate-vitejs",title:"ViteJS"},p=void 0,r={unversionedId:"develop/sdk/integrate/howto-integrate-vitejs",id:"develop/sdk/integrate/howto-integrate-vitejs",title:"ViteJS",description:"ViteJS is a great tool to bootstrap your project.",source:"@site/docs/develop/01_sdk/04_integrate/04_vitejs.md",sourceDirName:"develop/01_sdk/04_integrate",slug:"/develop/sdk/integrate/howto-integrate-vitejs",permalink:"/docs/develop/sdk/integrate/howto-integrate-vitejs",draft:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/01_sdk/04_integrate/04_vitejs.md",tags:[],version:"current",lastUpdatedAt:1666946848,formattedLastUpdatedAt:"Oct 28, 2022",sidebarPosition:4,frontMatter:{id:"howto-integrate-vitejs",title:"ViteJS"},sidebar:"sdk",previous:{title:"KILT Distillery",permalink:"/docs/develop/sdk/integrate/howto-integrate-distillery"},next:{title:"Troubleshoot",permalink:"/docs/develop/sdk/troubleshoot-sdk"}},a={},d=[],u={toc:d};function f(l){let{components:e,...o}=l;return(0,n.kt)("wrapper",(0,t.Z)({},u,o,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://vitejs.dev/guide/"},"ViteJS")," is a great tool to bootstrap your project.\nAs for all browser based projects, you have to make sure that NodeJS polyfills are in place to make the SDK work in such an environment.\nIf you start from any ViteJS template, you only have to make sure to install and enable those polyfills."),(0,n.kt)("p",null,"Bootstrap using the template of your choice and install KILT + NodeJS polyfills:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"yarn create vite my-app --template react-ts\ncd my-app\nyarn add @kiltprotocol/sdk-js\nyarn add --dev @esbuild-plugins/node-globals-polyfill\nyarn add --dev @esbuild-plugins/node-modules-polyfill\n")),(0,n.kt)("p",null,"Adjust the ",(0,n.kt)("inlineCode",{parentName:"p"},"vite.config.ts")," file to activate the polyfills:"),(0,n.kt)(i.Z,{className:"language-ts",mdxType:"CodeBlock"},'import react from \'@vitejs/plugin-react\'\nimport rollupNodePolyFill from \'rollup-plugin-node-polyfills\'\n\nimport { NodeGlobalsPolyfillPlugin } from \'@esbuild-plugins/node-globals-polyfill\'\nimport { NodeModulesPolyfillPlugin } from \'@esbuild-plugins/node-modules-polyfill\'\nimport { defineConfig } from \'vite\'\n\nexport default defineConfig({\n  plugins: [react()],\n  optimizeDeps: {\n    esbuildOptions: {\n      plugins: [\n        NodeGlobalsPolyfillPlugin({\n          process: true,\n          buffer: true\n        }),\n        NodeModulesPolyfillPlugin()\n      ]\n    }\n  },\n  build: {\n    rollupOptions: {\n      plugins: [rollupNodePolyFill()]\n    }\n  },\n  resolve: {\n    alias: {\n      buffer: \'rollup-plugin-node-polyfills/polyfills/buffer-es6\',\n      process: \'rollup-plugin-node-polyfills/polyfills/process-es6\',\n      util: \'rollup-plugin-node-polyfills/polyfills/util\',\n      stream: \'rollup-plugin-node-polyfills/polyfills/stream\',\n      string_decoder: \'rollup-plugin-node-polyfills/polyfills/string-decoder\',\n      events: \'rollup-plugin-node-polyfills/polyfills/events\'\n\n      // other available polyfills that are not required by the KILT SDK\n      // sys: "util",\n      // path: "rollup-plugin-node-polyfills/polyfills/path",\n      // querystring: "rollup-plugin-node-polyfills/polyfills/qs",\n      // punycode: "rollup-plugin-node-polyfills/polyfills/punycode",\n      // url: "rollup-plugin-node-polyfills/polyfills/url",\n      // http: "rollup-plugin-node-polyfills/polyfills/http",\n      // https: "rollup-plugin-node-polyfills/polyfills/http",\n      // os: "rollup-plugin-node-polyfills/polyfills/os",\n      // assert: "rollup-plugin-node-polyfills/polyfills/assert",\n      // constants: "rollup-plugin-node-polyfills/polyfills/constants",\n      // _stream_duplex:\n      //   "rollup-plugin-node-polyfills/polyfills/readable-stream/duplex",\n      // _stream_passthrough:\n      //   "rollup-plugin-node-polyfills/polyfills/readable-stream/passthrough",\n      // _stream_readable:\n      //   "rollup-plugin-node-polyfills/polyfills/readable-stream/readable",\n      // _stream_writable:\n      //   "rollup-plugin-node-polyfills/polyfills/readable-stream/writable",\n      // _stream_transform:\n      //   "rollup-plugin-node-polyfills/polyfills/readable-stream/transform",\n      // timers: "rollup-plugin-node-polyfills/polyfills/timers",\n      // console: "rollup-plugin-node-polyfills/polyfills/console",\n      // vm: "rollup-plugin-node-polyfills/polyfills/vm",\n      // zlib: "rollup-plugin-node-polyfills/polyfills/zlib",\n      // tty: "rollup-plugin-node-polyfills/polyfills/tty",\n      // domain: "rollup-plugin-node-polyfills/polyfills/domain",\n    }\n  }\n})\n'),(0,n.kt)("p",null,"After that you can initialize and use the SDK as usual."),(0,n.kt)(i.Z,{className:"language-tsx",mdxType:"CodeBlock"},"import { useEffect, useState } from 'react'\n\nimport * as Kilt from '@kiltprotocol/sdk-js'\n\nexport function App() {\n  const [did, setDid] = useState('')\n  useEffect(() => {\n    const resolveWeb3Name = async () => {\n      const api = await Kilt.connect('wss://spiritnet.kilt.io')\n      const encodedDidDetails = await api.call.did.queryByWeb3Name('john_doe')\n      try {\n        const {\n          document: { uri }\n        } = Kilt.Did.linkedInfoFromChain(encodedDidDetails)\n        setDid(uri)\n      } catch {\n        setDid('unknown')\n      }\n    }\n    resolveWeb3Name()\n  })\n\n  return <div className=\"App\">john_doe is {did}</div>\n}\n"))}f.isMDXComponent=!0}}]);