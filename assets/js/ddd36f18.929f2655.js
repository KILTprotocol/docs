"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9916],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},g="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),g=s(n),f=r,u=g["".concat(c,".").concat(f)]||g[f]||p[f]||l;return n?a.createElement(u,o(o({ref:t},d),{},{components:n})):a.createElement(u,o({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[g]="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9599:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const l={id:"lifecycle",title:"Lifecycle of a Delegator"},o=void 0,i={unversionedId:"participate/staking/delegate/lifecycle",id:"participate/staking/delegate/lifecycle",title:"Lifecycle of a Delegator",description:"The following diagram depicts the full lifecycle of a delegator from owning free KILT to delegating, losing a delegation seat, re-delegating and finally unlocking their stake.",source:"@site/docs/participate/01_staking/03_delegate/05_delegator_lifecycle.md",sourceDirName:"participate/01_staking/03_delegate",slug:"/participate/staking/delegate/lifecycle",permalink:"/docs/participate/staking/delegate/lifecycle",draft:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/participate/01_staking/03_delegate/05_delegator_lifecycle.md",tags:[],version:"current",lastUpdatedAt:1692174893,formattedLastUpdatedAt:"Aug 16, 2023",sidebarPosition:5,frontMatter:{id:"lifecycle",title:"Lifecycle of a Delegator"},sidebar:"staking",previous:{title:"Leave the Set of Delegators",permalink:"/docs/participate/staking/delegate/exit"},next:{title:"Claim Staking Rewards",permalink:"/docs/participate/staking/claim-rewards"}},c={},s=[],d={toc:s},g="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(g,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The following diagram depicts the full lifecycle of a delegator from owning free KILT to delegating, losing a delegation seat, re-delegating and finally unlocking their stake."),(0,r.kt)("p",null,"It provides a summary of the detailed information provided in the preceding sections."),(0,r.kt)("div",{className:"kilt-mermaid"},(0,r.kt)("mermaid",{value:'flowchart TD\n   A["Hold at least 20 KILT"] --\x3e |Choose candidate| B("Collator candidate chosen");\n   B --\x3e |"Call \\n joinDelegators"| C{"Can delegate to target? \\n Either \\n 1. There are empty \\n delegations or \\n 2. You delegate more \\n than another Delegator"};\n   C --\x3e |yes| D("Delegating to a collator candidate")\n   C --\x3e |no| C2{"Balance locked?\\n e.g., previously delegated \\n without unlocking?"}\n   C2 --\x3e |no| A\n   C2 --\x3e |yes| G\n   D --\x3e D2("Accumulating rewards \\non each block built by \\n delegated collator")\n   D --\x3e |"leave \\n Delegators"| E("Not delegating")\n   D --\x3e |"your Collator \\n candidate leaves"| E\n   E --\x3e E2("Not accumulating \\n rewards")\n   E --\x3e F{"Delegate to \\n another candidate?"}\n   F --\x3e |Yes| B\n   F --\x3e |No| G("Locked tokens")\n   G --\x3e |Want to unlock| H{"Waited 7 days?"}\n   H --\x3e |yes| I("Balance with expired lock")\n   H --\x3e |no| F\n   I --\x3e |"Call \\n unlockUnstaked"| A\n\n    %% Styles\n    A:::unstakedFreeKilt\n    B:::preDelegationCheck\n    C:::preDelegationCheck\n    C2:::notDelegating\n    D:::activelyDelegating\n    D2:::activelyDelegating\n    E:::notDelegating\n    E2:::preUnlockStaked\n    F:::notDelegating\n    G:::preUnlockStaked\n    H:::preUnlockStaked\n    I:::preUnlockStaked\n\n    %% StyleDef\n    classDef preDelegationCheck fill:#FFF4BD, color:black, stroke:none;\n    classDef notDelegating fill:#F1C0B9, color:black, stroke:black, stroke-width:1px;;\n    classDef unstakedFreeKilt fill:#85D2D0, color:black, stroke:black, stroke-width:1px;\n    classDef activelyDelegating fill:#94C973, color:black, stroke:#333, stroke-width:2px;\n    classDef preUnlockStaked fill:#F37970, color:black, stroke:black;'})))}p.isMDXComponent=!0}}]);