(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[779],{25380:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=25380,e.exports=t},51909:(e,t,n)=>{"use strict";n.d(t,{Z:()=>k});var o=n(87462),i=n(67294),a=n(52263),r=n(73945),s=n(28182),c=n(12175),p=n(65488),l=n(85162),d=n(90814);const k=e=>{let{children:t,fileName:n,...k}=e;const h=t,{code:u}=(0,c.transform)(h,{plugins:["transform-typescript"],retainLines:!0}),{siteConfig:{customFields:{prettierConfig:m}}}=(0,a.Z)(),y=(0,r.format)(u,{parser:s.parsers.babel.parse,...m}),T=n?`${n}.ts`:void 0,f=n?`${n}.js`:void 0;return i.createElement(p.Z,{groupId:"ts-js-choice"},i.createElement(l.Z,{value:"ts",label:"Typescript",default:!0},i.createElement(d.Z,(0,o.Z)({},k,{className:"language-ts",title:T}),h)),i.createElement(l.Z,{value:"js",label:"Javascript"},i.createElement(d.Z,(0,o.Z)({},k,{className:"language-js",title:f}),y)))}},97008:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>k,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var o=n(87462),i=(n(67294),n(3905)),a=n(51909);const r={id:"ctype-creation",title:"Create a CType"},s=void 0,c={unversionedId:"develop/sdk/cookbook/claiming/ctype-creation",id:"develop/sdk/cookbook/claiming/ctype-creation",title:"Create a CType",description:"The creation of a CType in KILT involves two steps: the definition of a CType and the anchoring of its hash on the KILT blockchain.",source:"@site/docs/develop/01_sdk/02_cookbook/04_claiming/01_ctype_creation.md",sourceDirName:"develop/01_sdk/02_cookbook/04_claiming",slug:"/develop/sdk/cookbook/claiming/ctype-creation",permalink:"/docs/develop/sdk/cookbook/claiming/ctype-creation",draft:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/01_sdk/02_cookbook/04_claiming/01_ctype_creation.md",tags:[],version:"current",lastUpdatedAt:1666946848,formattedLastUpdatedAt:"Oct 28, 2022",sidebarPosition:1,frontMatter:{id:"ctype-creation",title:"Create a CType"},sidebar:"sdk",previous:{title:"Unlink an Account From a KILT DID",permalink:"/docs/develop/sdk/cookbook/account_linking/account-unlink"},next:{title:"Request an Attestation",permalink:"/docs/develop/sdk/cookbook/claiming/attestation-request"}},p={},l=[],d={toc:l};function k(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The creation of a CType in KILT involves two steps: the definition of a CType and the anchoring of its hash on the KILT blockchain."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"The creator of a CType is required to have a full DID with an attestation key.\nTo see how to manage DIDs, please refer to the ",(0,i.kt)("a",{parentName:"p",href:"/docs/develop/sdk/cookbook/dids/full-did-update"},"DID section"),".")),(0,i.kt)("p",null,"The following snippets show how:"),(0,i.kt)(a.Z,{mdxType:"TsJsBlock"},"import * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function createDriversLicenseCType(\n  creator: Kilt.DidUri,\n  submitterAccount: Kilt.KiltKeyringPair,\n  signCallback: Kilt.SignExtrinsicCallback\n): Promise<Kilt.ICType> {\n  const api = Kilt.ConfigService.get('api')\n\n  // Create a new CType definition.\n  const ctype = Kilt.CType.fromProperties(`Drivers License by ${creator}`, {\n    name: {\n      type: 'string'\n    },\n    age: {\n      type: 'integer'\n    },\n    id: {\n      type: 'string'\n    }\n  })\n\n  // Generate a creation tx.\n  const ctypeCreationTx = api.tx.ctype.add(Kilt.CType.toChain(ctype))\n  // Sign it with the right DID key.\n  const authorizedCtypeCreationTx = await Kilt.Did.authorizeTx(\n    creator,\n    ctypeCreationTx,\n    signCallback,\n    submitterAccount.address\n  )\n  // Submit the creation tx to the KILT blockchain\n  // using the KILT account specified in the creation operation.\n  await Kilt.Blockchain.signAndSubmitTx(\n    authorizedCtypeCreationTx,\n    submitterAccount\n  )\n\n  return ctype\n}\n"),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"The creation of a new CType requires the CType hash to be unique.\nBefore writing a new CType, Attesters should check whether there is already an existing CType which matches their requirements.\nVisit our ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/KILTprotocol/ctype-index"},"CType index repository")," for a non-exhaustive list of existing CTypes.")))}k.isMDXComponent=!0}}]);