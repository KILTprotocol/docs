"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4870],{1685:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var s=n(4848),r=n(8453),i=n(1122);const o={id:"overview",title:"Overview"},a=void 0,c={id:"concepts/credentials/overview",title:"Overview",description:"Credentials consist of a set of claims which belong to a Claimer, are attested by an Attester, and that a Verifier can verify.",source:"@site/docs/concepts/05_credentials/01_overview.md",sourceDirName:"concepts/05_credentials",slug:"/concepts/credentials/overview",permalink:"/docs/concepts/credentials/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/concepts/05_credentials/01_overview.md",tags:[],version:"current",lastUpdatedAt:1733496053e3,sidebarPosition:1,frontMatter:{id:"overview",title:"Overview"},sidebar:"concepts",previous:{title:"AssetDIDs",permalink:"/docs/concepts/asset-dids"},next:{title:"CTypes",permalink:"/docs/concepts/credentials/ctypes"}},l={},d=[];function h(e){const t={a:"a",admonition:"admonition",li:"li",ol:"ol",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Credentials"})," consist of a set of claims which belong to a ",(0,s.jsx)(t.strong,{children:"Claimer"}),", are attested by an ",(0,s.jsx)(t.strong,{children:"Attester"}),", and that a ",(0,s.jsx)(t.strong,{children:"Verifier"})," can verify."]}),"\n",(0,s.jsx)("center",{children:(0,s.jsx)(i.A,{alt:"Credential Overview Diagram",sources:{light:"/img/concepts/credentials/overview.png",dark:"/img/concepts/credentials/overview_dark.png"}})}),"\n",(0,s.jsx)(t.p,{children:"To get a credential, a Claimer needs to take the following steps:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["Find a ",(0,s.jsx)(t.strong,{children:"CType"})," to base a claim on. Potential Attesters and Verifiers might advertise this information themselves."]}),"\n",(0,s.jsxs)(t.li,{children:["Make a ",(0,s.jsx)(t.strong,{children:"claim"})," containing a set of properties about themselves."]}),"\n",(0,s.jsxs)(t.li,{children:["Fulfil any requirement from your Attester. For example, accepting their ",(0,s.jsx)(t.strong,{children:"Terms"})," and paying a ",(0,s.jsx)(t.strong,{children:"Quote"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Request an attestation"})," from the Attester."]}),"\n",(0,s.jsxs)(t.li,{children:["Wait for the Attester to ",(0,s.jsx)(t.strong,{children:"attest"})," claims."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Once attested, the wrapped claims are considered to be a valid credential."}),"\n",(0,s.jsx)(t.p,{children:"To use a Credential, the Claimer can generate a Credential-Presentation for a Verifier.\nThe verification would follow this process:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["The Verifier may request a ",(0,s.jsx)(t.strong,{children:"Credential"})," of a CType, along with with properties to reveal.\nHe would also provide a ",(0,s.jsx)(t.strong,{children:"challenge"})," to ensure the presentations are not recycled."]}),"\n",(0,s.jsxs)(t.li,{children:["The Claimer selectively ",(0,s.jsx)(t.strong,{children:"discloses"})," the requested properties and signs them along with the challenge to generate a presentation."]}),"\n",(0,s.jsxs)(t.li,{children:["The Verifier ",(0,s.jsx)(t.strong,{children:"verify"})," the presentation structure, content and signature, and decides whether they trust the Attester of the presented credential."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"The next sections describe each step in more detail."}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsxs)(t.p,{children:["To learn about how to implement the flow above in a dapp that interacts with a browser extension, read the ",(0,s.jsx)(t.a,{href:"https://github.com/KILTprotocol/spec-ext-credential-api",children:"Credential API specification"}),"."]})})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(6540);const r={},i=s.createContext(r);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);