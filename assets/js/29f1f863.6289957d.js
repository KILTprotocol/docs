(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2297],{5380:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=5380,e.exports=t},9083:(e,t,o)=>{"use strict";o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>f,frontMatter:()=>l,metadata:()=>a,toc:()=>u});var s=o(5893),i=o(1151),d=o(1909);const n="import * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function queryFullDid(\n  didUri: Kilt.DidUri\n): Promise<Kilt.DidDocument | null> {\n  const { metadata, document } = await Kilt.Did.resolve(didUri)\n  if (metadata.deactivated) {\n    console.log(`DID ${didUri} has been deleted.`)\n    return null\n  } else if (document === undefined) {\n    console.log(`DID ${didUri} does not exist.`)\n    return null\n  } else {\n    return document\n  }\n}\n",l={id:"did-query",title:"Resolve a DID"},r=void 0,a={id:"develop/sdk/cookbook/dids/did-query",title:"Resolve a DID",description:"Querying the state of a DID is called resolution.",source:"@site/docs/develop/01_sdk/02_cookbook/01_dids/04_did_query.md",sourceDirName:"develop/01_sdk/02_cookbook/01_dids",slug:"/develop/sdk/cookbook/dids/did-query",permalink:"/docs/develop/sdk/cookbook/dids/did-query",draft:!1,unlisted:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/01_sdk/02_cookbook/01_dids/04_did_query.md",tags:[],version:"current",lastUpdatedAt:1707906150,formattedLastUpdatedAt:"Feb 14, 2024",sidebarPosition:4,frontMatter:{id:"did-query",title:"Resolve a DID"},sidebar:"sdk",previous:{title:"Update a Full DID keys and service endpoints",permalink:"/docs/develop/sdk/cookbook/dids/full-did-update"},next:{title:"Delete a Full DID",permalink:"/docs/develop/sdk/cookbook/dids/full-did-delete"}},c={},u=[];function p(e){const t={a:"a",admonition:"admonition",p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["Querying the state of a DID is called ",(0,s.jsx)(t.strong,{children:"resolution"}),".\nThe entity that queries the DID Document for a given DID, i.e., resolves it, is called a ",(0,s.jsx)(t.strong,{children:"resolver"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"The KILT SDK provides such a resolver to use with KILT DIDs, as the snippet below shows:"}),"\n",(0,s.jsx)(d.Z,{children:n}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["The DID resolver can resolve both light and full DIDs.\nFor a more in-depth explanation about the KILT DID method and resolution, refer to our ",(0,s.jsx)(t.a,{href:"https://github.com/KILTprotocol/spec-kilt-did",children:"specification"}),"."]})})]})}function f(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},1909:(e,t,o)=>{"use strict";o.d(t,{Z:()=>f});var s=o(7294),i=o(2263),d=o(2175),n=o(4935),l=o(4990),r=o(9966),a=o(4866),c=o(5162),u=o(9286),p=o(5893);const f=e=>{let{children:t,fileName:o,...f}=e;const D=t,[h,m]=(0,s.useState)("# loading code..."),{siteConfig:{customFields:{prettierConfig:k}}}=(0,i.Z)(),v=(0,s.useMemo)((()=>{const{code:e}=(0,d.transform)(D,{plugins:["transform-typescript"],retainLines:!0});return e}),[D]);(0,s.useEffect)((()=>{n.WU(v,{parser:"babel",plugins:[l.Z,r.ZP],...k}).then(m)}),[k,v]);const b=[{fileName:o?`${o}.ts`:void 0,fileContents:D,fileID:"ts",fileLabel:"Typescript"},{fileName:o?`${o}.js`:void 0,fileContents:h,fileID:"js",fileLabel:"Javascript"}];return(0,p.jsx)(p.Fragment,{children:(0,p.jsx)(a.Z,{groupId:"ts-js-choice",children:b.map((e=>(0,p.jsx)(c.Z,{value:e.fileID,label:e.fileLabel,default:!0,children:(0,p.jsx)(u.Z,{...f,className:"language-"+e.fileID,title:e.fileName,children:e.fileContents})})))})})}}}]);