(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5064],{25380:function(e){function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=function(){return[]},t.resolve=t,t.id=25380,e.exports=t},51909:function(e,t,n){"use strict";var o=n(83117),a=n(67294),i=n(52263),s=n(73945),r=n(28182),l=n(12175),c=n(65488),d=n(85162),m=n(90814);t.Z=e=>{let{children:t,fileName:n,...p}=e;const u=t,{code:b}=(0,l.transform)(u,{plugins:["transform-typescript"],retainLines:!0}),{siteConfig:{customFields:{prettierConfig:k}}}=(0,i.Z)(),w=(0,s.format)(b,{parser:r.parsers.babel.parse,...k}),f=n?`${n}.ts`:void 0,h=n?`${n}.js`:void 0;return a.createElement(c.Z,{groupId:"ts-js-choice"},a.createElement(d.Z,{value:"ts",label:"Typescript",default:!0},a.createElement(m.Z,(0,o.Z)({},p,{className:"language-ts",title:f}),u)),a.createElement(d.Z,{value:"js",label:"Javascript"},a.createElement(m.Z,(0,o.Z)({},p,{className:"language-js",title:h}),w)))}},67297:function(e,t,n){"use strict";n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return r},default:function(){return p},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return d}});var o=n(83117),a=(n(67294),n(3905)),i=n(51909);const s={id:"web3name-release",title:"Release a web3name"},r=void 0,l={unversionedId:"develop/sdk/cookbook/web3names/web3name-release",id:"develop/sdk/cookbook/web3names/web3name-release",title:"Release a web3name",description:"If a web3name is no longer needed, either the DID owner or the deposit payer can release it, with deposit being released and returned to the original payer.",source:"@site/docs/develop/01_sdk/02_cookbook/02_web3names/03_release.md",sourceDirName:"develop/01_sdk/02_cookbook/02_web3names",slug:"/develop/sdk/cookbook/web3names/web3name-release",permalink:"/docs/develop/sdk/cookbook/web3names/web3name-release",draft:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/01_sdk/02_cookbook/02_web3names/03_release.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"web3name-release",title:"Release a web3name"},sidebar:"sdk",previous:{title:"Query Public Credentials for a web3name",permalink:"/docs/develop/sdk/cookbook/web3names/credential-query"},next:{title:"Link an Account to a KILT DID",permalink:"/docs/develop/sdk/cookbook/account_linking/account-link"}},c={},d=[],m={toc:d};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"If a web3name is no longer needed, either the DID owner or the deposit payer can release it, with deposit being released and returned to the original payer."),(0,a.kt)("p",null,"In the case of the DID owner willing to release the web3name, the following snippet provides a reference implementation on how to achieve that."),(0,a.kt)(i.Z,{mdxType:"TsJsBlock"},"import * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function releaseWeb3Name(\n  did: Kilt.DidUri,\n  submitterAccount: Kilt.KiltKeyringPair,\n  signCallback: Kilt.SignExtrinsicCallback\n): Promise<void> {\n  const api = Kilt.ConfigService.get('api')\n\n  const web3NameReleaseTx = api.tx.web3Names.releaseByOwner()\n  const authorizedWeb3NameReleaseTx = await Kilt.Did.authorizeTx(\n    did,\n    web3NameReleaseTx,\n    signCallback,\n    submitterAccount.address\n  )\n  await Kilt.Blockchain.signAndSubmitTx(\n    authorizedWeb3NameReleaseTx,\n    submitterAccount\n  )\n}\n"),(0,a.kt)("p",null,"If the web3name is being released by the deposit payer, the signature of the DID owner is not required; a regular signed extrinsic can be submitted to the KILT blockchain, as shown below."),(0,a.kt)(i.Z,{mdxType:"TsJsBlock"},"import type { KeyringPair } from '@polkadot/keyring/types'\n\nimport * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function reclaimWeb3NameDeposit(\n  depositPayerAccount: KeyringPair,\n  web3Name: Kilt.Did.Web3Name\n): Promise<void> {\n  const api = Kilt.ConfigService.get('api')\n\n  // Release the web3name by the deposit payer.\n  const web3NameReleaseTx = api.tx.web3Names.reclaimDeposit(web3Name)\n  await Kilt.Blockchain.signAndSubmitTx(web3NameReleaseTx, depositPayerAccount)\n}\n"))}p.isMDXComponent=!0}}]);