(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5341],{5764:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=5764,e.exports=t},9208:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>h,default:()=>g,frontMatter:()=>d,metadata:()=>m,toc:()=>u});var i=n(4848),r=n(8453),a=n(3172),s=n(1470),l=n(9365);const c="import * as Kilt from '@kiltprotocol/sdk-js'\n\n// Create a Claim object from light DID, CType and given content.\nexport function createClaim(\n  lightDid: Kilt.DidUri,\n  ctype: Kilt.ICType,\n  content: Kilt.IClaim['contents']\n): Kilt.IClaim {\n  const claim = Kilt.Claim.fromCTypeAndClaimContents(ctype, content, lightDid)\n\n  return claim\n}\n",o="import { config as envConfig } from 'dotenv'\n\nimport * as Kilt from '@kiltprotocol/sdk-js'\n\nimport { createClaim } from './createClaim'\nimport { generateLightDid } from './generateLightDid'\nimport { getCtypeSchema } from '../attester/ctypeSchema'\n\nexport function generateCredential(\n  claimerDid: Kilt.DidUri,\n  claimAttributes: Kilt.IClaim['contents']\n): Kilt.ICredential {\n  // Create claim.\n  const ctype = getCtypeSchema()\n  const claim = createClaim(claimerDid, ctype, claimAttributes)\n\n  // Create credential and request attestation.\n  console.log('Claimer -> create request')\n  return Kilt.Credential.fromClaim(claim)\n}\n\n// Don't execute if this is imported by another file.\nif (require.main === module) {\n  ;(async () => {\n    envConfig()\n\n    try {\n      await Kilt.init()\n\n      const claimerDidMnemonic = process.env.CLAIMER_DID_MNEMONIC as string\n      const claimerDid = generateLightDid(claimerDidMnemonic)\n\n      const request = generateCredential(claimerDid.uri, {\n        age: 28,\n        name: 'Max Mustermann'\n      })\n      console.log(\n        '\u26a0\ufe0f  save this to ./claimer/_credential.json for testing  \u26a0\ufe0f\\n\\n'\n      )\n      console.log(JSON.stringify(request, null, 2))\n    } catch (e) {\n      console.log('Error while building credential')\n      throw e\n    }\n  })()\n}\n",d={id:"request",title:"Request an Attestation"},h=void 0,m={id:"develop/workshop/claimer/request",title:"Request an Attestation",description:"This section covers creating a Claim and a Credential.",source:"@site/docs/develop/03_workshop/05_claimer/02_request.md",sourceDirName:"develop/03_workshop/05_claimer",slug:"/develop/workshop/claimer/request",permalink:"/docs/develop/workshop/claimer/request",draft:!1,unlisted:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/03_workshop/05_claimer/02_request.md",tags:[],version:"current",lastUpdatedAt:172198217e4,sidebarPosition:2,frontMatter:{id:"request",title:"Request an Attestation"},sidebar:"workshop",previous:{title:"DID",permalink:"/docs/develop/workshop/claimer/did"},next:{title:"\ud83e\uddfe Attestation",permalink:"/docs/develop/workshop/attestation"}},p={},u=[{value:"Create Credential",id:"create-credential",level:2},{value:"Receive attestation for claim",id:"receive-attestation-for-claim",level:2},{value:"Run",id:"run",level:2}];function f(e){const t={a:"a",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["This section covers creating a ",(0,i.jsx)(t.code,{children:"Claim"})," and a ",(0,i.jsx)(t.code,{children:"Credential"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["KILT is a premissionless system.\nAnyone or anything can claim something and attest to it.\nBut an attested credential only has value if the ",(0,i.jsx)("span",{className:"label-role verifier",children:"Verifier"})," of the credential ",(0,i.jsx)(t.em,{children:"trusts"})," the ",(0,i.jsx)("span",{className:"label-role attester",children:"Attester"})," of the credential."]}),"\n",(0,i.jsx)(t.h2,{id:"create-credential",children:"Create Credential"}),"\n",(0,i.jsxs)(t.p,{children:["Use the previously created ",(0,i.jsx)(t.code,{children:"light DID"}),", ",(0,i.jsx)(t.code,{children:"ctype"}),", and ",(0,i.jsx)("span",{className:"label-role claimer",children:"Claimer"})," provided ",(0,i.jsx)(t.code,{children:"content"})," to generate the ",(0,i.jsx)(t.code,{children:"Claim"})," object."]}),"\n",(0,i.jsx)(t.p,{children:"A claim consists of attributes that we claim to be true about us."}),"\n",(0,i.jsx)(a.A,{fileName:"claimer/createClaim",children:c}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"fromCTypeAndClaimContents"})," function takes the ",(0,i.jsx)(t.code,{children:"lightDid"}),", ",(0,i.jsx)(t.code,{children:"ctype"}),", and ",(0,i.jsx)(t.code,{children:"content"})," values and generates a ",(0,i.jsx)(t.code,{children:"Claim"})," object."]}),"\n",(0,i.jsx)(t.h2,{id:"receive-attestation-for-claim",children:"Receive attestation for claim"}),"\n",(0,i.jsxs)(t.p,{children:["Since you want to receive an attestation for those claims, build a ",(0,i.jsx)(t.code,{children:"Credential"})," in the ",(0,i.jsx)(t.code,{children:"generateCredential"})," function below."]}),"\n",(0,i.jsxs)(t.p,{children:["The credential contains all necessary information so the ",(0,i.jsx)("span",{className:"label-role attester",children:"Attester"})," can attest it."]}),"\n",(0,i.jsx)(a.A,{fileName:"claimer/generateCredential",children:o}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"main"})," function takes the Claimer mnemonic and generates the light DID following the steps outlined in the ",(0,i.jsx)(t.a,{href:"/docs/develop/workshop/claimer/did",children:"DID section"}),".\nIt then calls the ",(0,i.jsx)(t.code,{children:"generateCredential"})," function using the supplied claim attributes.\nIt then uses the ",(0,i.jsx)(t.code,{children:"createClaim"})," method from the previous step to create the ",(0,i.jsx)(t.code,{children:"Claim"})," object and the ",(0,i.jsx)(t.code,{children:"Kilt.Credential.fromClaim"})," method takes the claim and returns the ",(0,i.jsx)(t.code,{children:"Credential"})," object."]}),"\n",(0,i.jsxs)(t.p,{children:["When ",(0,i.jsx)("span",{className:"label-role attester",children:"Attesters"})," issue ",(0,i.jsx)(t.code,{children:"Attestations"}),", they are written to the chain, which requires a deposit.\nEach new ",(0,i.jsx)(t.code,{children:"Credential"})," is unique.\nDuring testing, you can store and reuse credentials into ",(0,i.jsx)(t.code,{children:"./claimer/_credential.json"})," to avoid multiple attestations."]}),"\n",(0,i.jsx)(t.p,{children:"You can share this credential with others following the workshop to see how they get denied from fraudulent senders."}),"\n",(0,i.jsx)(t.h2,{id:"run",children:"Run"}),"\n",(0,i.jsxs)(s.A,{groupId:"ts-js-choice",children:[(0,i.jsx)(l.A,{value:"ts",label:"Typescript",default:!0,children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"yarn ts-node claimer/generateCredential.ts\n"})})}),(0,i.jsx)(l.A,{value:"js",label:"Javascript",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"node claimer/generateCredential.js\n"})})})]}),"\n",(0,i.jsxs)(t.p,{children:["OK, you've made a claim as a ",(0,i.jsx)("span",{className:"label-role claimer",children:"Claimer"})," and created a credential from it.\nThe next step is to finish the ",(0,i.jsx)("span",{className:"label-role attester",children:"Attester"})," and get the credential attested!"]})]})}function g(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(f,{...e})}):f(e)}},3172:(e,t,n)=>{"use strict";n.d(t,{A:()=>p});var i=n(6540),r=n(4586),a=n(6352),s=n(8463),l=n(5283),c=n(6745),o=n(1470),d=n(9365),h=n(1432),m=n(4848);const p=e=>{let{children:t,fileName:n,...p}=e;const u=t,[f,g]=(0,i.useState)("# loading code..."),{siteConfig:{customFields:{prettierConfig:j}}}=(0,r.A)(),x=(0,i.useMemo)((()=>{const{code:e}=(0,a.transform)(u,{plugins:["transform-typescript"],retainLines:!0}),t=["./generateAccount","./generateKeypairs","./ctypeSchema","./createClaim","./generateLightDid","../attester/ctypeSchema","../claimer/generateLightDid","../claimer/generateCredential","./claimer/createPresentation","./claimer/generateKeypairs","./claimer/generateLightDid"];let n=e.replace(/from\s+['"](.+)['"]/g,((e,n)=>t.includes(n)?`from '${n}.js'`:e));return n=n.replace("if (require.main === module)","if (process.argv[1] === new URL(import.meta.url).pathname)"),n}),[u]);(0,i.useEffect)((()=>{s.GP(x,{parser:"babel",plugins:[l.A,c.Ay],...j}).then(g)}),[j,x]);const C=[{fileName:n?`${n}.ts`:void 0,fileContents:u,fileID:"ts",fileLabel:"Typescript"},{fileName:n?`${n}.js`:void 0,fileContents:f,fileID:"js",fileLabel:"Javascript"}];return(0,m.jsx)(m.Fragment,{children:(0,m.jsx)(o.A,{groupId:"ts-js-choice",children:C.map((e=>(0,m.jsx)(d.A,{value:e.fileID,label:e.fileLabel,default:!0,children:(0,m.jsx)(h.A,{...p,className:"language-"+e.fileID,title:e.fileName,children:e.fileContents})})))})})}}}]);