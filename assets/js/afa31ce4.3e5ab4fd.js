"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8469],{5199:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>a,frontMatter:()=>r,metadata:()=>d,toc:()=>l});var s=i(4848),t=i(8453);const r={id:"opendid_service",title:"Run OpenDID Service"},c=void 0,d={id:"develop/opendid/opendid_service",title:"Run OpenDID Service",description:"Configuration",source:"@site/docs/develop/08_opendid/03_opendid_service.md",sourceDirName:"develop/08_opendid",slug:"/develop/opendid/opendid_service",permalink:"/docs/develop/opendid/opendid_service",draft:!1,unlisted:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/08_opendid/03_opendid_service.md",tags:[],version:"current",lastUpdatedAt:172198217e4,sidebarPosition:3,frontMatter:{id:"opendid_service",title:"Run OpenDID Service"},sidebar:"opendid",previous:{title:"OpenDID Flow",permalink:"/docs/develop/opendid/flow"},next:{title:"Integrate OpenDID",permalink:"/docs/develop/opendid/integrate_opendid"}},o={},l=[{value:"Configuration",id:"configuration",level:2},{value:"Run setup container",id:"run-setup-container",level:3},{value:"Run the service",id:"run-the-service",level:2},{value:"Next steps",id:"next-steps",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["Running the OpenDID service requires some configuration and a KILT DID.\nThe DID establishes a secure session with an identity wallet using a key agreement key of type ",(0,s.jsx)(n.code,{children:"X25519KeyAgreementKey2019"})," included in the DID Document generated by the setup container."]}),"\n",(0,s.jsxs)(n.p,{children:["OpenDID serves a ",(0,s.jsx)(n.a,{href:"https://identity.foundation/.well-known/resources/did-configuration/",children:"well-known DID configuration"}),", which the identity wallet uses to ensure that the domain is linked to the specified DID."]}),"\n",(0,s.jsx)(n.h3,{id:"run-setup-container",children:"Run setup container"}),"\n",(0,s.jsxs)(n.p,{children:["Before running the ",(0,s.jsx)(n.code,{children:"opendid-setup"})," container, set two environment variables:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"SEED"})," to provide an account with funds (minimum of 3 KILT) for the DID generation."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'export SEED="dont try this seed its completely made up for this nice example"\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"ENDPOINT"})}),"\n",(0,s.jsx)(n.p,{children:'Set to "spiritnet" if the account is on the spiritnet production network.'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'export ENDPOINT="spiritnet"\n'})}),"\n",(0,s.jsx)(n.p,{children:'Set to "peregrine" if the account is on the peregrine test network.'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'export ENDPOINT="peregrine"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Then run the setup with the following command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'docker run --rm -it -e "ENDPOINT=${ENDPOINT}" -v $(pwd):/data docker.io/kiltprotocol/opendid-setup:latest "${SEED}"\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The command generates a set of new mnemonics and then derives a DID from them and generates multiple files into the current directory:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"config.yaml"})," The configuration file used by the OpenDID service."]}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["You only need the ",(0,s.jsx)(n.code,{children:"config.yaml"})," to run the OpenDID service.\nThis file includes the generated mnemonic and secret keys and you should protect it from unauthorized access."]})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"did-secrets.json"})," This file contains the public and secret keys in the DID Document."]}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"Keep a secure backup of this file as it contains all the secret keys."})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"did-document.json"})," contains the DID Document generated by this setup."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The container generates sensible defaults in the ",(0,s.jsx)(n.code,{children:"config.yaml"})," file, but here are some values you might want to change:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Set ",(0,s.jsx)(n.code,{children:"production"})," to true, this only allows secure connections."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Set the ",(0,s.jsx)(n.code,{children:"WellKnownDid"})," > ",(0,s.jsx)(n.code,{children:"origin"}),", which should match the host running the OpenDID service."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Set the keys used for JWT issuance in the ",(0,s.jsx)(n.code,{children:"jwt"})," section."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"client"})," section, including:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The client ID as a key (The default is: ",(0,s.jsx)(n.code,{children:"example-client"}),")."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"requirements"})," section, including:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"What CTypes are required for authentication."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The trusted attesters as an address (The default is for the ",(0,s.jsx)(n.a,{href:"https://socialkyc.io/",children:"SocialKYC attester"}),")."]}),"\n",(0,s.jsx)(n.admonition,{title:"info",type:"note",children:(0,s.jsxs)(n.p,{children:["The generated default ",(0,s.jsx)(n.code,{children:"config.yaml"})," requires an ",(0,s.jsx)(n.a,{href:"https://test.ctypehub.galaniprojects.de/ctype/kilt:ctype:0x3291bb126e33b4862d421bfaa1d2f272e6cdfc4f96658988fbcffea8914bd9ac",children:"email credential"})," issued by an attester."]})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["What ",(0,s.jsx)(n.code,{children:"redirect_url"}),"s the service accepts (The default is ",(0,s.jsx)(n.code,{children:"http://localhost:1606/callback.html"})," for the demo project)."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"clientSecret"})," is optional but recommended. If you use the authorization code flow, the ",(0,s.jsx)(n.code,{children:"token"})," endpoint requires it."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"run-the-service",children:"Run the service"}),"\n",(0,s.jsxs)(n.p,{children:["When you've made changes to the ",(0,s.jsx)(n.code,{children:"config.yaml"})," file, you can run the OpenDID service."]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Specify the runtime through the ",(0,s.jsx)(n.code,{children:"RUNTIME"})," environment variable:"]}),"\n",(0,s.jsxs)(n.p,{children:["Set to ",(0,s.jsx)(n.code,{children:'"spiritnet"'})," for production KILT"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'export RUNTIME="spiritnet"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Set to ",(0,s.jsx)(n.code,{children:'"peregrine"'})," for the KILT test net."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'export RUNTIME="peregrine"\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Run the ",(0,s.jsx)(n.code,{children:"docker.io/kiltprotocol/opendid"})," docker image."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'docker run -d --rm \\\n    -v $(pwd)/config.yaml:/app/config.yaml \\\n    -v $(pwd)/checks:/app/checks \\\n    -e "RUNTIME=${RUNTIME}" \\\n    -p 3001:3001 \\\n    docker.io/kiltprotocol/opendid:latest\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Open the login page at ",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.a,{href:"http://localhost:3001",children:"http://localhost:3001"})}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,s.jsxs)(n.p,{children:["With configuration in place and a service running, next you need to ",(0,s.jsx)(n.a,{href:"/docs/develop/opendid/integrate_opendid",children:"integrate OpenDID into an application"})," so that a user can use the login page."]})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>d});var s=i(6540);const t={},r=s.createContext(t);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);