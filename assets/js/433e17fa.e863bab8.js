(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9481],{6234:(e,t,a)=>{"use strict";a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=a(87462),s=(a(67294),a(3905)),i=a(93456);const o={id:"overview",title:"\ud83d\udc53 Overview"},n=void 0,l={unversionedId:"develop/workshop/overview",id:"develop/workshop/overview",title:"\ud83d\udc53 Overview",description:"In this tutorial, we'll run through the full story of a claim.",source:"@site/docs/develop/03_workshop/03_overview.md",sourceDirName:"develop/03_workshop",slug:"/develop/workshop/overview",permalink:"/docs/develop/workshop/overview",draft:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/03_workshop/03_overview.md",tags:[],version:"current",lastUpdatedAt:1666946848,formattedLastUpdatedAt:"Oct 28, 2022",sidebarPosition:3,frontMatter:{id:"overview",title:"\ud83d\udc53 Overview"},sidebar:"workshop",previous:{title:"\ud83c\udf92 Setup",permalink:"/docs/develop/workshop/setup"},next:{title:"\ud83c\udfe2 Attester",permalink:"/docs/develop/workshop/attester/"}},c={},d=[{value:"Request an Attestation",id:"request-an-attestation",level:2},{value:"Verify an Attestation",id:"verify-an-attestation",level:2}],h={toc:d};function p(e){let{components:t,...a}=e;return(0,s.kt)("wrapper",(0,r.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"In this tutorial, we'll run through the full story of a claim."),(0,s.kt)("p",null,"To do so, three actors will be involved: a ",(0,s.kt)("span",{className:"label-role claimer"},"Claimer"),", an ",(0,s.kt)("span",{className:"label-role attester"},"Attester")," and a ",(0,s.kt)("span",{className:"label-role verifier"},"Verifier"),".\nYou'll be playing all three roles.\nIn the real world, these actors would be running different services, so we set up different folders to mimic this separation."),(0,s.kt)("p",null,"Both the ",(0,s.kt)("span",{className:"label-role verifier"},"Verifier")," and the ",(0,s.kt)("span",{className:"label-role attester"},"Attester")," have to interact with the KILT blockchain.\nBut only the ",(0,s.kt)("span",{className:"label-role attester"},"Attester")," is required to own KILTs since they have to pay for storing the attestation on chain.\nThe ",(0,s.kt)("span",{className:"label-role verifier"},"Verifier")," only needs to query the KILT blockchain to ensure that the attestation is still valid and was not revoked.\nThe ",(0,s.kt)("span",{className:"label-role claimer"},"Claimer")," is not required to query the blockchain, but they might do so to check whether their credential is still valid or if the Attester has revoked it in the meantime."),(0,s.kt)("h2",{id:"request-an-attestation"},"Request an Attestation"),(0,s.kt)("p",null,"Before the ",(0,s.kt)("span",{className:"label-role claimer"},"Claimer")," can attest a credential, they need to generate a ",(0,s.kt)("a",{parentName:"p",href:"/docs/develop/sdk/cookbook/dids/light-did-creation"},"light DID"),", which they can do completely off-chain.\nThe ",(0,s.kt)("span",{className:"label-role attester"},"Attester")," has to register their DID on chain and therefore needs KILT coins."),(0,s.kt)("p",null,"After both the ",(0,s.kt)("span",{className:"label-role attester"},"Attester")," and the ",(0,s.kt)("span",{className:"label-role claimer"},"Claimer")," have set up their identities, the ",(0,s.kt)("span",{className:"label-role claimer"},"Claimer")," can start the attestation process by requesting an attestation from the ",(0,s.kt)("span",{className:"label-role attester"},"Attester"),"."),(0,s.kt)(i.Mermaid,{config:{},chart:"sequenceDiagram\nactor C as Claimer\nactor A as Attester\nparticipant B as KILT Blockchain\n    C->>+C: Create credential from provided claims\n    C->>+A: Transmit credential to request attestation\n    A->>A: Validate received attributes\n    A->>+B: Store attestation\n    B--\x3e>-A: Attestation hash\n    A--\x3e>-C: Attestation Hash",mdxType:"Mermaid"}),(0,s.kt)("h2",{id:"verify-an-attestation"},"Verify an Attestation"),(0,s.kt)("p",null,"The ",(0,s.kt)("span",{className:"label-role verifier"},"Verifier")," requests a presentation from the  ",(0,s.kt)("span",{className:"label-role claimer"},"Claimer")," for a specific CType.\nWithout a specific CType, the presentation is meaningless.\nThus, it is important to require this.\nWe will ",(0,s.kt)("a",{parentName:"p",href:"/docs/develop/workshop/attester/ctype"},"explain CTypes in more detail")," in a later chapter.\nA presentation is derived from a credential and does not need to contain all attributes.\nA ",(0,s.kt)("span",{className:"label-role claimer"},"Claimer")," could choose to hide their address from their passport if the ",(0,s.kt)("span",{className:"label-role verifier"},"Verifier")," is only interested in their age."),(0,s.kt)(i.Mermaid,{chart:"sequenceDiagram\nactor C as Claimer\nactor V as Verifier\nparticipant B as KILT Blockchain\n    V->>+C: Request presentation for CType\n    C->>C: Derive a presentation from a credential\n    C--\x3e>-V: submit presentation\n    V->>B: check validity of presentation",mdxType:"Mermaid"}))}p.isMDXComponent=!0},11748:(e,t,a)=>{var r={"./locale":89234,"./locale.js":89234};function s(e){var t=i(e);return a(t)}function i(e){if(!a.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}s.keys=function(){return Object.keys(r)},s.resolve=i,e.exports=s,s.id=11748}}]);