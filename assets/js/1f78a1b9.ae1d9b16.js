(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7311],{5380:t=>{function e(t){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}e.keys=()=>[],e.resolve=e,e.id=5380,t.exports=e},1909:(t,e,i)=>{"use strict";i.d(e,{Z:()=>p});var o=i(7462),a=i(7294),n=i(2263),s=i(3945),r=i(8182),l=i(2175),c=i(4866),d=i(5162),m=i(814);const p=t=>{let{children:e,fileName:i,...p}=t;const k=e,{code:u}=(0,l.transform)(k,{plugins:["transform-typescript"],retainLines:!0}),{siteConfig:{customFields:{prettierConfig:h}}}=(0,n.Z)(),v=(0,s.format)(u,{parser:r.parsers.babel.parse,...h}),b=i?`${i}.ts`:void 0,f=i?`${i}.js`:void 0;return a.createElement(c.Z,{groupId:"ts-js-choice"},a.createElement(d.Z,{value:"ts",label:"Typescript",default:!0},a.createElement(m.Z,(0,o.Z)({},p,{className:"language-ts",title:b}),k)),a.createElement(d.Z,{value:"js",label:"Javascript"},a.createElement(m.Z,(0,o.Z)({},p,{className:"language-js",title:f}),v)))}},9164:(t,e,i)=>{"use strict";i.r(e),i.d(e,{assets:()=>m,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>p});var o=i(7462),a=(i(7294),i(3905)),n=i(1909);const s="import * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function revokeCredential(\n  attester: Kilt.DidUri,\n  submitterAccount: Kilt.KiltKeyringPair,\n  signCallback: Kilt.SignExtrinsicCallback,\n  credential: Kilt.ICredential,\n  shouldRemove = false\n): Promise<void> {\n  const api = Kilt.ConfigService.get('api')\n\n  const tx = shouldRemove\n    ? // If the attestation is to be removed, create a `remove` tx,\n      // which revokes and removes the attestation in one go.\n      api.tx.attestation.remove(credential.rootHash, null)\n    : // Otherwise, simply revoke the attestation but leave it on chain.\n      // Hence, the storage is not cleared and the deposit not returned.\n      api.tx.attestation.revoke(credential.rootHash, null)\n\n  const authorizedTx = await Kilt.Did.authorizeTx(\n    attester,\n    tx,\n    signCallback,\n    submitterAccount.address\n  )\n\n  // Submit the right tx to the KILT blockchain.\n  await Kilt.Blockchain.signAndSubmitTx(authorizedTx, submitterAccount)\n}\n",r="import * as Kilt from '@kiltprotocol/sdk-js'\n\nexport async function reclaimAttestationDeposit(\n  submitterAddress: Kilt.KiltKeyringPair,\n  credential: Kilt.ICredential\n): Promise<void> {\n  const api = Kilt.ConfigService.get('api')\n\n  // Generate the tx to claim the deposit back.\n  const depositReclaimTx = api.tx.attestation.reclaimDeposit(\n    credential.rootHash\n  )\n\n  // Submit the revocation tx to the KILT blockchain.\n  await Kilt.Blockchain.signAndSubmitTx(depositReclaimTx, submitterAddress)\n}\n",l={id:"attestation-removal",title:"Revoke a Credential"},c=void 0,d={unversionedId:"develop/sdk/cookbook/claiming/attestation-removal",id:"develop/sdk/cookbook/claiming/attestation-removal",title:"Revoke a Credential",description:"If the conditions that make a credential valid cease to exist, an Attester can revoke and optionally remove their attestation from the KILT blockchain.",source:"@site/docs/develop/01_sdk/02_cookbook/04_claiming/06_credential_revocation.md",sourceDirName:"develop/01_sdk/02_cookbook/04_claiming",slug:"/develop/sdk/cookbook/claiming/attestation-removal",permalink:"/docs/develop/sdk/cookbook/claiming/attestation-removal",draft:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/01_sdk/02_cookbook/04_claiming/06_credential_revocation.md",tags:[],version:"current",lastUpdatedAt:1681303842,formattedLastUpdatedAt:"Apr 12, 2023",sidebarPosition:6,frontMatter:{id:"attestation-removal",title:"Revoke a Credential"},sidebar:"sdk",previous:{title:"Verify a Credential or a Presentation",permalink:"/docs/develop/sdk/cookbook/claiming/presentation-verification"},next:{title:"Credential Issuance",permalink:"/docs/develop/sdk/cookbook/public_credentials/public-credential-issuance"}},m={},p=[{value:"Claim Back an Attestation Deposit",id:"claim-back-an-attestation-deposit",level:2}],k={toc:p},u="wrapper";function h(t){let{components:e,...i}=t;return(0,a.kt)(u,(0,o.Z)({},k,i,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"If the conditions that make a credential valid cease to exist, an Attester can revoke and optionally remove their attestation from the KILT blockchain.\nThis does not automatically delete the credential from the Claimer's wallet, of course, but it makes it impossible for the Claimer to use the credential in the future."),(0,a.kt)("p",null,"Since the attestation creation reserved some KILT tokens from the submitter's balance, removing an attestation would return those funds into the payer's pockets."),(0,a.kt)(n.Z,{mdxType:"TsJsBlock"},s),(0,a.kt)("h2",{id:"claim-back-an-attestation-deposit"},"Claim Back an Attestation Deposit"),(0,a.kt)("p",null,"Claiming back the deposit of an attestation is semantically equivalent to revoking and removing the attestation, with the difference that the extrinsic to claim the deposit can only be called by the deposit owner and does not require the Attester's signature:"),(0,a.kt)(n.Z,{mdxType:"TsJsBlock"},r))}h.isMDXComponent=!0}}]);