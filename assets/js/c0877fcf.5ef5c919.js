"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3110],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return h}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),c=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(r),h=a,f=d["".concat(i,".").concat(h)]||d[h]||p[h]||o;return r?n.createElement(f,s(s({ref:t},u),{},{components:r})):n.createElement(f,s({ref:t},u))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<o;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},85162:function(e,t,r){r.d(t,{Z:function(){return s}});var n=r(67294),a=r(34334),o="tabItem_Ymn6";function s(e){let{children:t,hidden:r,className:s}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,s),hidden:r},t)}},65488:function(e,t,r){r.d(t,{Z:function(){return h}});var n=r(83117),a=r(67294),o=r(34334),s=r(72389),l=r(67392),i=r(7094),c=r(12466),u="tabList__CuJ",p="tabItem_LNqP";function d(e){var t;const{lazy:r,block:s,defaultValue:d,values:h,groupId:f,className:m}=e,v=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),y=h??v.map((e=>{let{props:{value:t,label:r,attributes:n}}=e;return{value:t,label:r,attributes:n}})),b=(0,l.l)(y,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const k=null===d?d:d??(null==(t=v.find((e=>e.props.default)))?void 0:t.props.value)??v[0].props.value;if(null!==k&&!y.some((e=>e.value===k)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${k}" but none of its children has the corresponding value. Available values are: ${y.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:w,setTabGroupChoices:g}=(0,i.U)(),[T,O]=(0,a.useState)(k),N=[],{blockElementScrollPositionUntilNextRender:j}=(0,c.o5)();if(null!=f){const e=w[f];null!=e&&e!==T&&y.some((t=>t.value===e))&&O(e)}const D=e=>{const t=e.currentTarget,r=N.indexOf(t),n=y[r].value;n!==T&&(j(t),O(n),null!=f&&g(f,String(n)))},C=e=>{var t;let r=null;switch(e.key){case"ArrowRight":{const t=N.indexOf(e.currentTarget)+1;r=N[t]??N[0];break}case"ArrowLeft":{const t=N.indexOf(e.currentTarget)-1;r=N[t]??N[N.length-1];break}}null==(t=r)||t.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",u)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":s},m)},y.map((e=>{let{value:t,label:r,attributes:s}=e;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>N.push(e),onKeyDown:C,onFocus:D,onClick:D},s,{className:(0,o.Z)("tabs__item",p,null==s?void 0:s.className,{"tabs__item--active":T===t})}),r??t)}))),r?(0,a.cloneElement)(v.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function h(e){const t=(0,s.Z)();return a.createElement(d,(0,n.Z)({key:String(t)},e))}},29741:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return h},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var n=r(83117),a=(r(67294),r(3905)),o=r(65488),s=r(85162);const l={id:"attester",title:"\ud83c\udfe2 Attester"},i=void 0,c={unversionedId:"develop/workshop/attester/attester",id:"develop/workshop/attester/attester",title:"\ud83c\udfe2 Attester",description:"In this section you will walk though all processes done by the Attester.",source:"@site/docs/develop/03_workshop/04_attester/index.md",sourceDirName:"develop/03_workshop/04_attester",slug:"/develop/workshop/attester/",permalink:"/docs/develop/workshop/attester/",draft:!1,editUrl:"https://github.com/KILTprotocol/docs/edit/master/docs/develop/03_workshop/04_attester/index.md",tags:[],version:"current",frontMatter:{id:"attester",title:"\ud83c\udfe2 Attester"},sidebar:"workshop",previous:{title:"\ud83d\udc53 Overview",permalink:"/docs/develop/workshop/overview"},next:{title:"Account",permalink:"/docs/develop/workshop/attester/account"}},u={},p=[{value:"Folder Structure",id:"folder-structure",level:2}],d={toc:p};function h(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In this section you will walk though all processes done by the ",(0,a.kt)("span",{className:"label-role attester"},"Attester"),"."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"You will ",(0,a.kt)("a",{parentName:"li",href:"/docs/develop/workshop/attester/account"},"create an account")," that is used to pay for all transactions and the storage deposits."),(0,a.kt)("li",{parentName:"ol"},"The next step is to ",(0,a.kt)("a",{parentName:"li",href:"/docs/develop/workshop/attester/did"},"create a DID"),", which is the identity that is used to create attestations.\nWhile you can always switch the KILT account and pay deposits and fees with any account you like, your DID stays the same and is the way Claimers will identify you and put trust in you."),(0,a.kt)("li",{parentName:"ol"},"Before we can attest claims, ",(0,a.kt)("a",{parentName:"li",href:"/docs/develop/workshop/attester/ctype"},"we need a CType")," which describes and gives context to what we attest."),(0,a.kt)("li",{parentName:"ol"},"Once we have a way to pay fees and deposits, have an identity and a CType ",(0,a.kt)("a",{parentName:"li",href:"/docs/develop/workshop/attestation"},"we can create attestations"),".")),(0,a.kt)("h2",{id:"folder-structure"},"Folder Structure"),(0,a.kt)("p",null,"Create the following files in the ",(0,a.kt)("span",{className:"label-role attester"},"Attester")," folder.\nThis folders serves to mimic an ",(0,a.kt)("span",{className:"label-role attester"},"Attester")," service."),(0,a.kt)(o.Z,{groupId:"ts-js-choice",mdxType:"Tabs"},(0,a.kt)(s.Z,{value:"ts",label:"Typescript",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"\u2514\u2500 kilt-rocks/ # project\n  \u2514\u2500 attester/ # all attester code\n     \u251c\u2500 attestCredential.ts # issues attestations\n     \u251c\u2500 ctypeSchema.ts # create a local CType definition\n     \u251c\u2500 generateAccount.ts # functions for setting up and loading the attester's account\n     \u251c\u2500 generateCtype.ts # register the CType on chain\n     \u251c\u2500 generateDid.ts # registers the attester's on-chain DID\n     \u2514\u2500 generateKeypairs.ts # setup the keys for the attester's DID\n"))),(0,a.kt)(s.Z,{value:"js",label:"Javascript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"\u2514\u2500 kilt-rocks/ # project\n  \u2514\u2500 attester/ # all attester code\n     \u251c\u2500 attestCredential.js # issues attestations\n     \u251c\u2500 ctypeSchema.js # create a local CType definition\n     \u251c\u2500 generateAccount.js # functions for setting up and loading the attester's account\n     \u251c\u2500 generateCtype.js # register the CType on chain\n     \u251c\u2500 generateDid.js # registers the attester's on-chain DID\n     \u2514\u2500 generateKeypairs.js # setup the keys for the attester's DID\n")))))}h.isMDXComponent=!0}}]);